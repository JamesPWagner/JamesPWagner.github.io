<?xml version="1.0" encoding="utf-8"?><bwFrame xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" default_layout="npxnsnfns1111001101" textdirection="ltr" device="false" fontscale="100" kbshortcuts="false" skip_nav_enabled="true" outputtype="undefined"><layouts><layout name="npnxsnfns1111001111" font="Calibri" controllayout="npnxsnfns1111001111" colorscheme="npxnsnfns1111001101" string_table="npxnsnfns1111001101" /><layout name="pxnsnfns1111001111" font="Calibri" controllayout="pxnsnfns1111001111" colorscheme="npxnsnfns1111001101" string_table="npxnsnfns1111001101" /><layout name="npxnsnfns1111001111" font="Calibri" controllayout="npxnsnfns1111001111" colorscheme="npxnsnfns1111001101" string_table="npxnsnfns1111001101" /><layout name="npnxnsnfns1111001111" font="Calibri" controllayout="npnxnsnfns1111001111" colorscheme="npxnsnfns1111001101" string_table="npxnsnfns1111001101" /><layout name="pxnsnfns1111001110" font="Calibri" controllayout="pxnsnfns1111001110" colorscheme="npxnsnfns1111001101" string_table="npxnsnfns1111001101" /><layout name="npxnsnfns1111001101" font="Calibri" controllayout="npxnsnfns1111001101" colorscheme="npxnsnfns1111001101" string_table="npxnsnfns1111001101" /><layout name="pxnsnfns1111001101" font="Calibri" controllayout="pxnsnfns1111001101" colorscheme="npxnsnfns1111001101" string_table="npxnsnfns1111001101" /><layout name="pnxnsnfns1111001111" font="Calibri" controllayout="pnxnsnfns1111001111" colorscheme="npxnsnfns1111001101" string_table="npxnsnfns1111001101" /><layout name="pxnsnfns0001001101" font="Calibri" controllayout="pxnsnfns0001001101" colorscheme="npxnsnfns1111001101" string_table="npxnsnfns1111001101" /></layouts><control_options><optiongroups><optiongroup name="sidebaroptions"><options><option name="title_enabled" value="true"><options><option name="title_text" value="VMware vSAN™: Monitoring and Troubleshooting Data Availability" /></options></option><option name="logo_enabled" value="true"><options><option name="logo_url" value="story_content/logo.swf"><properties><property name="width" value="125" /><property name="height" value="19" /></properties></option><option name="html5_logo_url" value="mobile/6b0FWqFVMHC.png" /></options></option><option name="sidebar_enabled" value="true"><options><option name="sidebarpos" value="left" /></options></option><optionlist name="tabs"><listitems><listitem name="outline" value="true" group="sidebar" /><listitem name="glossary" value="false" group="sidebar" /><listitem name="transcript" value="true" group="sidebar" /><listitem name="resources" value="false" group="sidebar" /></listitems></optionlist><option name="time_enabled" value="false"><options><option name="time_format" value="" /></options></option><option name="video_enabled" value="false"><options><option name="height" value="135" /></options></option></options></optiongroup><optiongroup name="menuoptions"><options><option name="flow" value="free" /><option name="wraplistitems" value="true" /><option name="tooltips" value="true" /><option name="autocollapse" value="true" /><option name="autonumber" value="false" /><option name="enableresultsicons" value="false" /></options></optiongroup><optiongroup name="controls"><options><option name="volume" value="true" /><option name="seekbar" value="true"><options><option name="readonly" value="false" /></options></option><option name="search" value="true" /><option name="replay" value="true" /><option name="pauseplay" value="true" /></options></optiongroup><optiongroup name="bottombaroptions"><options><option name="bottombar_enabled" value="true" /></options></optiongroup></optiongroups></control_options><control_layouts><control_layout name="npnxsnfns1111001111"><control name="volume" enabled="true" /><control name="seekbar" enabled="true" /><control name="replay" enabled="true" /><control name="pauseplay" enabled="true" /><control name="logo" enabled="true" /><control name="previous" enabled="false" /><control name="next" enabled="false" /><control name="submit" enabled="true" /><control name="finish" enabled="false" /><control name="submitall" enabled="false" /><control name="resources" enabled="false" /><control name="glossary" enabled="false" /><control name="transcript" enabled="true" /><control name="outline" enabled="true"><controls><control name="search" enabled="true" /></controls></control><control name="close_btn" enabled="true" /></control_layout><control_layout name="pxnsnfns1111001111"><control name="volume" enabled="true" /><control name="seekbar" enabled="true" /><control name="replay" enabled="true" /><control name="pauseplay" enabled="true" /><control name="logo" enabled="true" /><control name="previous" enabled="true" /><control name="next" enabled="true" /><control name="submit" enabled="false" /><control name="finish" enabled="false" /><control name="submitall" enabled="false" /><control name="resources" enabled="false" /><control name="glossary" enabled="false" /><control name="transcript" enabled="true" /><control name="outline" enabled="true"><controls><control name="search" enabled="true" /></controls></control><control name="close_btn" enabled="true" /></control_layout><control_layout name="npxnsnfns1111001111"><control name="volume" enabled="true" /><control name="seekbar" enabled="true" /><control name="replay" enabled="true" /><control name="pauseplay" enabled="true" /><control name="logo" enabled="true" /><control name="previous" enabled="false" /><control name="next" enabled="true" /><control name="submit" enabled="false" /><control name="finish" enabled="false" /><control name="submitall" enabled="false" /><control name="resources" enabled="false" /><control name="glossary" enabled="false" /><control name="transcript" enabled="true" /><control name="outline" enabled="true"><controls><control name="search" enabled="true" /></controls></control><control name="close_btn" enabled="true" /></control_layout><control_layout name="npnxnsnfns1111001111"><control name="volume" enabled="true" /><control name="seekbar" enabled="true" /><control name="replay" enabled="true" /><control name="pauseplay" enabled="true" /><control name="logo" enabled="true" /><control name="previous" enabled="false" /><control name="next" enabled="false" /><control name="submit" enabled="false" /><control name="finish" enabled="false" /><control name="submitall" enabled="false" /><control name="resources" enabled="false" /><control name="glossary" enabled="false" /><control name="transcript" enabled="true" /><control name="outline" enabled="true"><controls><control name="search" enabled="true" /></controls></control><control name="close_btn" enabled="true" /></control_layout><control_layout name="pxnsnfns1111001110"><control name="volume" enabled="true" /><control name="seekbar" enabled="true" /><control name="replay" enabled="true" /><control name="pauseplay" enabled="true" /><control name="logo" enabled="true" /><control name="previous" enabled="true" /><control name="next" enabled="true" /><control name="submit" enabled="false" /><control name="finish" enabled="false" /><control name="submitall" enabled="false" /><control name="resources" enabled="false" /><control name="glossary" enabled="false" /><control name="transcript" enabled="true" /><control name="outline" enabled="true"><controls><control name="search" enabled="true" /></controls></control><control name="close_btn" enabled="false" /></control_layout><control_layout name="npxnsnfns1111001101"><control name="volume" enabled="true" /><control name="seekbar" enabled="true" /><control name="replay" enabled="true" /><control name="pauseplay" enabled="true" /><control name="logo" enabled="true" /><control name="previous" enabled="false" /><control name="next" enabled="true" /><control name="submit" enabled="false" /><control name="finish" enabled="false" /><control name="submitall" enabled="false" /><control name="resources" enabled="false" /><control name="glossary" enabled="false" /><control name="transcript" enabled="true" /><control name="outline" enabled="true"><controls><control name="search" enabled="true" /></controls></control><control name="close_btn" enabled="true" /></control_layout><control_layout name="pxnsnfns1111001101"><control name="volume" enabled="true" /><control name="seekbar" enabled="true" /><control name="replay" enabled="true" /><control name="pauseplay" enabled="true" /><control name="logo" enabled="true" /><control name="previous" enabled="true" /><control name="next" enabled="true" /><control name="submit" enabled="false" /><control name="finish" enabled="false" /><control name="submitall" enabled="false" /><control name="resources" enabled="false" /><control name="glossary" enabled="false" /><control name="transcript" enabled="true" /><control name="outline" enabled="true"><controls><control name="search" enabled="true" /></controls></control><control name="close_btn" enabled="true" /></control_layout><control_layout name="pnxnsnfns1111001111"><control name="volume" enabled="true" /><control name="seekbar" enabled="true" /><control name="replay" enabled="true" /><control name="pauseplay" enabled="true" /><control name="logo" enabled="true" /><control name="previous" enabled="true" /><control name="next" enabled="false" /><control name="submit" enabled="false" /><control name="finish" enabled="false" /><control name="submitall" enabled="false" /><control name="resources" enabled="false" /><control name="glossary" enabled="false" /><control name="transcript" enabled="true" /><control name="outline" enabled="true"><controls><control name="search" enabled="true" /></controls></control><control name="close_btn" enabled="true" /></control_layout><control_layout name="pxnsnfns0001001101"><control name="volume" enabled="true" /><control name="seekbar" enabled="false" /><control name="replay" enabled="false" /><control name="pauseplay" enabled="false" /><control name="logo" enabled="true" /><control name="previous" enabled="true" /><control name="next" enabled="true" /><control name="submit" enabled="false" /><control name="finish" enabled="false" /><control name="submitall" enabled="false" /><control name="resources" enabled="false" /><control name="glossary" enabled="false" /><control name="transcript" enabled="true" /><control name="outline" enabled="true"><controls><control name="search" enabled="true" /></controls></control><control name="close_btn" enabled="true" /></control_layout></control_layouts><colorschemes><colorscheme name="npxnsnfns1111001101"><color_group name="infopanel"><group_colors><color name="link_text"><fill type="linear" rotation="90"><colors><color rgb="0x7C2280" alpha="100" stop="0" /></colors></fill></color><color name="link_hover"><fill type="linear" rotation="90"><colors><color rgb="0x0000EE" alpha="100" stop="0" /></colors></fill></color><color name="bg"><fill type="linear" rotation="90"><colors><color rgb="0xFFFFFF" alpha="100" stop="0" /></colors></fill></color><color name="shadow"><fill type="linear" rotation="90"><colors><color rgb="0xB8B8B8" alpha="100" stop="0" /></colors></fill></color><color name="name_text"><fill type="linear" rotation="90"><colors><color rgb="0x444444" alpha="100" stop="0" /></colors></fill></color><color name="title_text"><fill type="linear" rotation="90"><colors><color rgb="0x999999" alpha="100" stop="0" /></colors></fill></color></group_colors></color_group><color_group name="infopanelpopup"><group_colors><color name="link_text"><fill type="linear" rotation="90"><colors><color rgb="0x7C2280" alpha="100" stop="0" /></colors></fill></color><color name="link_hover"><fill type="linear" rotation="90"><colors><color rgb="0x0000EE" alpha="100" stop="0" /></colors></fill></color><color name="bg"><fill type="linear" rotation="90"><colors><color rgb="0xE9E9E9" alpha="100" stop="0" /><color rgb="0xCFCFCF" alpha="100" stop="255" /></colors></fill></color><color name="shadow"><fill type="linear" rotation="90"><colors><color rgb="0xB8B8B8" alpha="100" stop="0" /></colors></fill></color><color name="name_text"><fill type="linear" rotation="90"><colors><color rgb="0x444444" alpha="100" stop="0" /></colors></fill></color><color name="bio_text"><fill type="linear" rotation="90"><colors><color rgb="0x999999" alpha="100" stop="0" /></colors></fill></color></group_colors></color_group><color_group name="timer"><group_colors><color name="duration"><fill type="linear" rotation="90"><colors><color rgb="0x00D7FF" alpha="100" stop="0" /><color rgb="0x00ABFF" alpha="100" stop="255" /></colors></fill></color><color name="elapsed"><fill type="linear" rotation="90"><colors><color rgb="0xFEE347" alpha="100" stop="0" /><color rgb="0xFCCC2A" alpha="100" stop="255" /></colors></fill></color><color name="stroke"><fill type="linear" rotation="90"><colors><color rgb="0xC7C7C7" alpha="100" stop="0" /></colors></fill></color><color name="inner"><fill type="linear" rotation="90"><colors><color rgb="0xFFFFFF" alpha="100" stop="0" /></colors></fill></color><color name="text"><fill type="linear" rotation="90"><colors><color rgb="0x555555" alpha="100" stop="0" /></colors></fill></color></group_colors></color_group><color_group name="window"><group_colors><color name="text"><fill type="linear" rotation="90"><colors><color rgb="0x555555" alpha="100" stop="0" /></colors></fill></color><color name="inner"><fill type="linear" rotation="90"><colors><color rgb="0xEAEAEA" alpha="100" stop="0" /><color rgb="0xCFCFCF" alpha="100" stop="255" /></colors></fill></color><color name="bg"><fill type="linear" rotation="90"><colors><color rgb="0xF3F3F3" alpha="100" stop="0" /></colors></fill></color><color name="diva"><fill type="linear" rotation="90"><colors><color rgb="0xF7F7F7" alpha="100" stop="0" /></colors></fill></color><color name="divb"><fill type="linear" rotation="90"><colors><color rgb="0xD3D3D3" alpha="100" stop="0" /></colors></fill></color><color name="shadow"><fill type="linear" rotation="90"><colors><color rgb="0x000000" alpha="20" stop="0" /></colors></fill></color></group_colors></color_group><color_group name="editor"><group_colors><color name="slide_text"><fill type="linear" rotation="90"><colors><color rgb="0x555555" alpha="100" stop="0" /></colors></fill></color><color name="html_text"><fill type="linear" rotation="90"><colors><color rgb="0x444444" alpha="100" stop="0" /></colors></fill></color><color name="btn_bg"><fill type="linear" rotation="90"><colors><color rgb="0xF5F5F5" alpha="100" stop="0" /><color rgb="0xC7C7C7" alpha="100" stop="255" /></colors></fill></color><color name="btn_hover"><fill type="linear" rotation="90"><colors><color rgb="0xF2F2F2" alpha="100" stop="0" /><color rgb="0xAFAFAF" alpha="100" stop="255" /></colors></fill></color><color name="btn_down"><fill type="linear" rotation="90"><colors><color rgb="0xC7C7C7" alpha="100" stop="0" /><color rgb="0xF4F4F4" alpha="100" stop="255" /></colors></fill></color><color name="btn_border"><fill type="linear" rotation="90"><colors><color rgb="0xB1B1B1" alpha="100" stop="0" /></colors></fill></color><color name="btn_text"><fill type="linear" rotation="90"><colors><color rgb="0x353535" alpha="100" stop="0" /></colors></fill></color><color name="btn_text_shadow"><fill type="linear" rotation="90"><colors><color rgb="0xF0F0F0" alpha="100" stop="0" /></colors></fill></color></group_colors></color_group><color_group name="listitem"><group_colors><color name="selected_text"><fill type="linear" rotation="90"><colors><color rgb="0x353535" alpha="100" stop="0" /></colors></fill></color><color name="lines"><fill type="linear" rotation="90"><colors><color rgb="0xDFDFDF" alpha="100" stop="0" /></colors></fill></color><color name="hover"><fill type="linear" rotation="90"><colors><color rgb="0xE6E6E6" alpha="100" stop="0" /></colors></fill></color><color name="viewed"><fill type="linear" rotation="90"><colors><color rgb="0x909090" alpha="100" stop="0" /></colors></fill></color><color name="text"><fill type="linear" rotation="90"><colors><color rgb="0x353535" alpha="100" stop="0" /></colors></fill></color><color name="selected"><fill type="linear" rotation="90"><colors><color rgb="0xC0E2F1" alpha="100" stop="0" /></colors></fill></color><color name="shadow"><fill type="linear" rotation="90"><colors><color rgb="0xFFFFFF" alpha="100" stop="0" /></colors></fill></color></group_colors></color_group><color_group name="base"><group_colors><color name="text"><fill type="linear" rotation="90"><colors><color rgb="0x555555" alpha="100" stop="0" /></colors></fill></color><color name="diva"><fill type="linear" rotation="90"><colors><color rgb="0xD3D3D3" alpha="100" stop="0" /></colors></fill></color><color name="divb"><fill type="linear" rotation="90"><colors><color rgb="0xF7F7F7" alpha="100" stop="0" /></colors></fill></color><color name="bg"><fill type="linear" rotation="90"><colors><color rgb="0xE9E9E9" alpha="100" stop="0" /><color rgb="0xCFCFCF" alpha="100" stop="255" /></colors></fill></color><color name="border"><fill type="linear" rotation="90"><colors><color rgb="0xE9E9E9" alpha="100" stop="0" /><color rgb="0xF3F3F3" alpha="100" stop="255" /></colors></fill></color><color name="menu_shade"><fill type="linear" rotation="90"><colors><color rgb="0xDBDBDB" alpha="100" stop="0" /><color rgb="0xC3C3C3" alpha="100" stop="255" /></colors></fill></color><color name="slide_bg"><fill type="linear" rotation="90"><colors><color rgb="0xE9E9E9" alpha="100" stop="0" /><color rgb="0xCFCFCF" alpha="100" stop="255" /></colors></fill></color></group_colors></color_group><color_group name="button"><group_colors><color name="btn_bg"><fill type="linear" rotation="90"><colors><color rgb="0xF5F5F5" alpha="100" stop="0" /><color rgb="0xC7C7C7" alpha="100" stop="255" /></colors></fill></color><color name="btn_hover"><fill type="linear" rotation="90"><colors><color rgb="0xF2F2F2" alpha="100" stop="0" /><color rgb="0xAFAFAF" alpha="100" stop="255" /></colors></fill></color><color name="btn_down"><fill type="linear" rotation="90"><colors><color rgb="0xC7C7C7" alpha="100" stop="0" /><color rgb="0xF4F4F4" alpha="100" stop="255" /></colors></fill></color><color name="btn_border"><fill type="linear" rotation="90"><colors><color rgb="0xB1B1B1" alpha="100" stop="0" /></colors></fill></color><color name="btn_text"><fill type="linear" rotation="90"><colors><color rgb="0x353535" alpha="100" stop="0" /></colors></fill></color><color name="btn_text_shadow"><fill type="linear" rotation="90"><colors><color rgb="0xF0F0F0" alpha="100" stop="0" /></colors></fill></color><color name="btn_icon_color"><fill type="linear" rotation="90"><colors><color rgb="0x353535" alpha="100" stop="0" /></colors></fill></color><color name="btn_glow"><fill type="linear" rotation="90"><colors><color rgb="0xCFCFCF" alpha="100" stop="0" /></colors></fill></color></group_colors></color_group><color_group name="checkbox"><group_colors><color name="border"><fill type="linear" rotation="90"><colors><color rgb="0xB8B8B8" alpha="100" stop="0" /></colors></fill></color><color name="bg"><fill type="linear" rotation="90"><colors><color rgb="0xFFFFFF" alpha="100" stop="0" /></colors></fill></color><color name="check"><fill type="linear" rotation="90"><colors><color rgb="0x33CC00" alpha="100" stop="0" /></colors></fill></color><color name="text"><fill type="linear" rotation="90"><colors><color rgb="0x444444" alpha="100" stop="0" /></colors></fill></color><color name="hover"><fill type="linear" rotation="90"><colors><color rgb="0x6BF8FF" alpha="100" stop="0" /></colors></fill></color></group_colors></color_group><color_group name="logo"><group_colors><color name="bg"><fill type="linear" rotation="90"><colors><color rgb="0xD8D8D8" alpha="100" stop="0" /></colors></fill></color><color name="shadow"><fill type="linear" rotation="90"><colors><color rgb="0xD8D8D8" alpha="100" stop="0" /></colors></fill></color></group_colors></color_group><color_group name="menu"><group_colors><color name="bg"><fill type="linear" rotation="90"><colors><color rgb="0xF3F3F3" alpha="100" stop="0" /></colors></fill></color><color name="shadow"><fill type="linear" rotation="90"><colors><color rgb="0xB8B8B8" alpha="100" stop="0" /></colors></fill></color></group_colors></color_group><color_group name="scrollarea"><group_colors><color name="bg"><fill type="linear" rotation="0"><colors><color rgb="0xDEDEDE" alpha="100" stop="0" /><color rgb="0xE8E8E8" alpha="100" stop="128" /></colors></fill></color><color name="border"><fill type="linear" rotation="90"><colors><color rgb="0xF6F6F6" alpha="100" stop="0" /><color rgb="0xF3F3F3" alpha="100" stop="255" /></colors></fill></color><color name="button_bg"><fill type="linear" rotation="90"><colors><color rgb="0xC4C4C4" alpha="100" stop="0" /><color rgb="0xB2B2B2" alpha="100" stop="255" /></colors></fill></color><color name="button_inner"><fill type="linear" rotation="90"><colors><color rgb="0xCBCBCB" alpha="100" stop="0" /><color rgb="0xBABABA" alpha="100" stop="255" /></colors></fill></color><color name="button_border"><fill type="linear" rotation="90"><colors><color rgb="0xB8B8B8" alpha="100" stop="0" /></colors></fill></color><color name="icons"><fill type="linear" rotation="90"><colors><color rgb="0x555555" alpha="100" stop="0" /></colors></fill></color><color name="shadow"><fill type="linear" rotation="90"><colors><color rgb="0xD9D9D9" alpha="100" stop="0" /></colors></fill></color><color name="detaila"><fill type="linear" rotation="90"><colors><color rgb="0xA7A7A7" alpha="100" stop="0" /></colors></fill></color><color name="detailb"><fill type="linear" rotation="90"><colors><color rgb="0xCFCFCF" alpha="100" stop="0" /></colors></fill></color></group_colors></color_group><color_group name="searchinput"><group_colors><color name="bg"><fill type="linear" rotation="90"><colors><color rgb="0xDFDFDF" alpha="100" stop="0" /></colors></fill></color><color name="border"><fill type="linear" rotation="90"><colors><color rgb="0xADADAD" alpha="100" stop="0" /><color rgb="0xFAFAFA" alpha="100" stop="255" /></colors></fill></color><color name="icon"><fill type="linear" rotation="90"><colors><color rgb="0x8A8A8A" alpha="100" stop="0" /></colors></fill></color><color name="button_hover"><fill type="linear" rotation="90"><colors><color rgb="0xF5F5F5" alpha="100" stop="0" /><color rgb="0xC7C7C7" alpha="100" stop="255" /></colors></fill></color><color name="hover_glow"><fill type="linear" rotation="90"><colors><color rgb="0x6BF8FF" alpha="100" stop="0" /></colors></fill></color><color name="search_text"><fill type="linear" rotation="90"><colors><color rgb="0x8A8A8A" alpha="100" stop="0" /></colors></fill></color><color name="bg_active"><fill type="linear" rotation="90"><colors><color rgb="0xFAFAFA" alpha="100" stop="0" /></colors></fill></color><color name="text_active"><fill type="linear" rotation="90"><colors><color rgb="0x333333" alpha="100" stop="0" /></colors></fill></color></group_colors></color_group><color_group name="seekcontrol"><group_colors><color name="bg"><fill type="linear" rotation="90"><colors><color rgb="0xF5F5F5" alpha="100" stop="0" /><color rgb="0xC7C7C7" alpha="100" stop="255" /></colors></fill></color><color name="border"><fill type="linear" rotation="90"><colors><color rgb="0xB1B1B1" alpha="100" stop="0" /></colors></fill></color><color name="seek_border"><fill type="linear" rotation="90"><colors><color rgb="0xB8B8B8" alpha="100" stop="0" /><color rgb="0xEEEEEE" alpha="100" stop="255" /></colors></fill></color><color name="seek_bg"><fill type="linear" rotation="90"><colors><color rgb="0xE7E7E7" alpha="100" stop="0" /></colors></fill></color><color name="seek_position"><fill type="linear" rotation="90"><colors><color rgb="0xFFFFFF" alpha="100" stop="0" /></colors></fill></color><color name="btn_icon_color"><fill type="linear" rotation="90"><colors><color rgb="0x2D2D2D" alpha="100" stop="0" /></colors></fill></color><color name="btn_icon_hover"><fill type="linear" rotation="90"><colors><color rgb="0x555555" alpha="100" stop="0" /></colors></fill></color><color name="btn_icon_shadow"><fill type="linear" rotation="90"><colors><color rgb="0xF0F0F0" alpha="100" stop="0" /></colors></fill></color></group_colors></color_group><color_group name="tabs"><group_colors><color name="bg"><fill type="linear" rotation="90"><colors><color rgb="0xF3F3F3" alpha="100" stop="0" /></colors></fill></color><color name="text"><fill type="linear" rotation="90"><colors><color rgb="0x555555" alpha="100" stop="0" /></colors></fill></color><color name="selected"><fill type="linear" rotation="90"><colors><color rgb="0x333333" alpha="100" stop="0" /></colors></fill></color><color name="hover"><fill type="linear" rotation="90"><colors><color rgb="0x333333" alpha="100" stop="0" /></colors></fill></color><color name="shadow"><fill type="linear" rotation="90"><colors><color rgb="0xF0F0F0" alpha="100" stop="0" /></colors></fill></color></group_colors></color_group><color_group name="transcript"><group_colors><color name="div"><fill type="linear" rotation="90"><colors><color rgb="0xE1E1E1" alpha="100" stop="0" /></colors></fill></color><color name="heading_text"><fill type="linear" rotation="90"><colors><color rgb="0x444444" alpha="100" stop="0" /></colors></fill></color></group_colors></color_group><color_group name="outline"><group_colors><color name="diva"><fill type="linear" rotation="90"><colors><color rgb="0xC6C6C6" alpha="100" stop="0" /></colors></fill></color><color name="divb"><fill type="linear" rotation="90"><colors><color rgb="0xF9F9F9" alpha="100" stop="0" /></colors></fill></color><color name="divc"><fill type="linear" rotation="90"><colors><color rgb="0xE1E1E1" alpha="100" stop="0" /></colors></fill></color><color name="search_text"><fill type="linear" rotation="90"><colors><color rgb="0x444444" alpha="100" stop="0" /></colors></fill></color><color name="search_hover"><fill type="linear" rotation="90"><colors><color rgb="0x0000EE" alpha="100" stop="0" /></colors></fill></color></group_colors></color_group><color_group name="resource"><group_colors><color name="separator"><fill type="linear" rotation="90"><colors><color rgb="0xE0E0E0" alpha="100" stop="0" /></colors></fill></color></group_colors></color_group><color_group name="glossary"><group_colors><color name="selected_text"><fill type="linear" rotation="90"><colors><color rgb="0x353535" alpha="100" stop="0" /></colors></fill></color><color name="selected"><fill type="linear" rotation="90"><colors><color rgb="0xC0E2F1" alpha="100" stop="0" /></colors></fill></color><color name="text"><fill type="linear" rotation="90"><colors><color rgb="0x353535" alpha="100" stop="0" /></colors></fill></color><color name="hover"><fill type="linear" rotation="90"><colors><color rgb="0xE6E6E6" alpha="100" stop="0" /></colors></fill></color><color name="diva"><fill type="linear" rotation="90"><colors><color rgb="0xE2E2E2" alpha="100" stop="0" /></colors></fill></color><color name="divb"><fill type="linear" rotation="90"><colors><color rgb="0xE2E2E2" alpha="100" stop="0" /></colors></fill></color><color name="divc"><fill type="linear" rotation="90"><colors><color rgb="0xFAFAFA" alpha="100" stop="0" /></colors></fill></color><color name="bg"><fill type="linear" rotation="90"><colors><color rgb="0xE7E7E7" alpha="100" stop="0" /></colors></fill></color><color name="heading_text"><fill type="linear" rotation="90"><colors><color rgb="0x444444" alpha="100" stop="0" /></colors></fill></color></group_colors></color_group><color_group name="volume"><group_colors><color name="thumb_border"><fill type="linear" rotation="90"><colors><color rgb="0xA5A5A5" alpha="100" stop="0" /></colors></fill></color><color name="thumb_inner"><fill type="linear" rotation="90"><colors><color rgb="0xD4D4D4" alpha="100" stop="0" /></colors></fill></color><color name="thumb_bg"><fill type="linear" rotation="90"><colors><color rgb="0xC8C8C8" alpha="100" stop="0" /></colors></fill></color><color name="slider_border"><fill type="linear" rotation="90"><colors><color rgb="0xF2F2F2" alpha="100" stop="0" /></colors></fill></color><color name="slider_bg"><fill type="linear" rotation="90"><colors><color rgb="0xBCBCBC" alpha="100" stop="0" /><color rgb="0xBCBCBC" alpha="100" stop="128" /><color rgb="0xC3C3C3" alpha="100" stop="255" /></colors></fill></color></group_colors></color_group></colorscheme></colorschemes><string_tables><string_table name="npxnsnfns1111001101"><string id="prev">PREV</string><string id="next">NEXT</string><string id="submit">SUBMIT</string><string id="outline">Menu</string><string id="resources">Resources</string><string id="glossary">Glossary</string><string id="transcript">Notes</string><string id="clear">Clear and return to Menu</string><string id="search_results">Search Results</string><string id="filter">Filter</string><string id="slide_text_chk">Slide Text</string><string id="transcript_chk">Notes</string><string id="search_in">Search in:</string><string id="check_include">Check to include</string><string id="search">Search...</string><string id="terms">Terms</string><string id="definition">Definition</string><string id="finish">FINISH</string><string id="acc_finish">finish</string><string id="acc_definition">definition</string><string id="acc_resources">resources</string><string id="acc_search_input">search</string><string id="acc_pause">pause</string><string id="acc_play">play</string><string id="acc_replay">replay</string><string id="acc_submit">submit</string><string id="acc_next">next</string><string id="acc_previous">previous</string><string id="acc_volume">volume</string><string id="acc_skipnavigation">Skip Navigation. Hit enter to return to the slide.</string><string id="submitall">SUBMIT ALL</string><string id="acc_submitall">submit all</string><string id="question_list">Question List</string><string id="more_info">More info</string><string id="send_an_email">Send an email</string><string id="close">Close</string><string id="bio">Bio</string><string id="exit">Exit</string></string_table></string_tables><sounds enabled="false" /><nav_data><outline><links><slidelink slideid="_player.67C16nIaahU.5vGRKXLPzGj" displaytext="VMware vSAN™: Monitoring and Troubleshooting Data Availability" expand="true" type="slide"><links><slidelink slideid="_player.67C16nIaahU.61pLwDT1vBe" displaytext="Introduction" expand="true" type="slide" /><slidelink slideid="_player.67C16nIaahU.68wghcZk1mv" displaytext="Course Objectives" expand="true" type="slide" /><slidelink slideid="_player.67C16nIaahU.6WM7aJkgtOS" displaytext="Course Outline" expand="true" type="slide" /><slidelink slideid="_player.6pITkaJVU3c" displaytext="Understanding vSAN Data Availability" expand="false" type="slide"><links><slidelink slideid="_player.6pITkaJVU3c.6fpsQnnGD3r" displaytext="Module Introduction" expand="true" type="slide" /><slidelink slideid="_player.6pITkaJVU3c.66jFHYt5w3J" displaytext="Module Objectives" expand="true" type="slide" /><slidelink slideid="_player.6pITkaJVU3c.5ixTVaLwzAn" displaytext="Storage Policies and Data Placement" expand="false" type="slide"><links><slidelink slideid="_player.6pITkaJVU3c.5tvHzZHWbhF" displaytext="vSAN Objects and Components" expand="true" type="slide" /><slidelink slideid="_player.6pITkaJVU3c.5nqsCWTgUmH" displaytext="VM Storage Policy" expand="true" type="slide" /><slidelink slideid="_player.6pITkaJVU3c.5rvA6wbR51o" displaytext="Storage Policies and Components" expand="true" type="slide" /><slidelink slideid="_player.6pITkaJVU3c.5lYdQCXBWd6" displaytext="Examples of Storage Policies and Component Count " expand="true" type="slide" /><slidelink slideid="_player.6pITkaJVU3c.6hKkoY513zU" displaytext="Demo: Viewing VM Storage Policy and Object Distribution" expand="true" type="slide" /><slidelink slideid="_player.6pITkaJVU3c.6oL0v1AscMY" displaytext="Try It: Viewing VM Storage Policy and Object Distribution" expand="true" type="slide" /></links></slidelink><slidelink slideid="_player.6pITkaJVU3c.6EYSA78eNwP" displaytext="vSAN Object Component States" expand="false" type="slide"><links><slidelink slideid="_player.6pITkaJVU3c.6DLAZnCoIlp" displaytext="Component States" expand="true" type="slide" /><slidelink slideid="_player.6pITkaJVU3c.5XZCk7vipxA" displaytext="Failure States: Absent and Degraded" expand="true" type="slide" /><slidelink slideid="_player.6pITkaJVU3c.656anzlgxRR" displaytext="Object Accessibility" expand="true" type="slide" /><slidelink slideid="_player.6pITkaJVU3c.6S8AeMtsLhq" displaytext="Object Compliance Status" expand="true" type="slide" /><slidelink slideid="_player.6pITkaJVU3c.5WyTmlfYcE7" displaytext="Demo: Examining VM Object Health" expand="true" type="slide" /></links></slidelink><slidelink slideid="_player.6pITkaJVU3c.5jN0rCONGkf" displaytext="Component Rebuilds and Resync" expand="false" type="slide"><links><slidelink slideid="_player.6pITkaJVU3c.5xntsI84Zll" displaytext="Introduction to Component Rebuilds and Resync" expand="true" type="slide" /><slidelink slideid="_player.6pITkaJVU3c.5YLLXeirSSB" displaytext="Component Resynchronization" expand="true" type="slide" /><slidelink slideid="_player.6pITkaJVU3c.6CZSWsnFnry" displaytext="Throttling Resync" expand="true" type="slide" /><slidelink slideid="_player.6pITkaJVU3c.5Y7I1LoRTzV" displaytext="Resumable Resync" expand="true" type="slide" /><slidelink slideid="_player.6pITkaJVU3c.6PiSLcLpQht" displaytext="Intelligent Rebuilds" expand="true" type="slide" /></links></slidelink><slidelink slideid="_player.6pITkaJVU3c.5jFe380fiHO" displaytext="Check Your Understanding  " expand="true" type="slide" /><slidelink slideid="_player.6pITkaJVU3c.6HS9v6qsm0l" displaytext="Check Your Understanding  " expand="true" type="slide" /><slidelink slideid="_player.6pITkaJVU3c.5jbdJfBWEzs" displaytext="Check Your Understanding" expand="true" type="slide" /><slidelink slideid="_player.6pITkaJVU3c.6axULqYvFs2" displaytext="Check Your Understanding" expand="true" type="slide" /><slidelink slideid="_player.6pITkaJVU3c.6HgJ8f4yXMf" displaytext="Review of Module Objectives" expand="true" type="slide" /></links></slidelink></links></slidelink></links></outline><search><slidetext slideid="67C16nIaahU.5vGRKXLPzGj" slidebank="false" type="slide">click next to continue. </slidetext><slidetext slideid="67C16nIaahU.61pLwDT1vBe" slidebank="false" type="slide">vmware vsan™: monitoring and troubleshooting data availability </slidetext><slidetext slideid="67C16nIaahU.68wghcZk1mv" slidebank="false" type="slide">course objectives after completing this course, you should be able to: explain how vsan provides data availability describe vsan monitoring and troubleshooting tools monitor the health of vsan cluster, disks, and objects describe expected behaviors for common failure scenarios identify, investigate, and remedy vsan data availability issues with vmware vsphere® web client  </slidetext><slidetext slideid="67C16nIaahU.6WM7aJkgtOS" slidebank="false" type="slide">course outline understanding vsan data availability storage policies and data placement vsan object component states component rebuilds and resync monitoring and troubleshooting tools and process monitoring and troubleshooting tools overview monitoring vsan health in vsphere web client troubleshooting process troubleshooting scenarios examining common failure scenarios troubleshooting data availability issues  </slidetext><slidetext slideid="6pITkaJVU3c.6fpsQnnGD3r" slidebank="false" type="slide">understanding vsan data availability this module begins with a discussion of storage policies and how they affect the component count. this is followed by the explanation of the relationship between component state and object compliance status. this module also discusses the vsan mechanisms and features that provide data availability. </slidetext><slidetext slideid="6pITkaJVU3c.66jFHYt5w3J" slidebank="false" type="slide">module objectives after completing this module, you will be able to: explain how storage policies affect the component count  describe the different states of components describe the vsan  component rebuild and resync process </slidetext><slidetext slideid="6pITkaJVU3c.5ixTVaLwzAn" slidebank="false" type="slide">storage policies and data placement </slidetext><slidetext slideid="6pITkaJVU3c.5tvHzZHWbhF" slidebank="false" type="slide">vsan objects and components 600 gb vsan datastore is an object store. vms are made up of a number of different storage objects. vms can have five different types of objects on a vsan datastore: vmdk vm home namespace vm swap snapshot deltas snapshot memory each object is composed of one or more components. component max size: 255 gb </slidetext><slidetext slideid="6pITkaJVU3c.5nqsCWTgUmH" slidebank="false" type="slide"> vm storage policy 600 gb vm storage policy performance protection data components are distributed across cluster based on vm storage policy. policies define levels of protection and performance, providing finer grain control over how the storage is consumed. policies can be applied at a per vm or vmdk level.  </slidetext><slidetext slideid="6pITkaJVU3c.5rvA6wbR51o" slidebank="false" type="slide">storage policies and components object size storage policy settings environment conditions component count and placement storage policy settings raid type = ? raid type = ? pftt = ? pftt = ? stripe width = ? stripe width = ? </slidetext><slidetext slideid="6pITkaJVU3c.5lYdQCXBWd6" slidebank="false" type="slide">examples of storage policies and component count  ftt=0 sw=2 ftt=1 sw=1 ftt=1 sw=2 </slidetext><slidetext slideid="6pITkaJVU3c.6hKkoY513zU" slidebank="false" type="slide">demo: viewing vm storage policy and object distribution if you have a vm, how do you know what storage policy it uses, and where the objects that make up the vm are placed in a vsan cluster in accordance with policy?  begin demo or skip </slidetext><slidetext slideid="6pITkaJVU3c.6oL0v1AscMY" slidebank="false" type="slide">try it: viewing vm storage policy and object distribution let us take a look at another example. this time you will complete the tasks of viewing the vm storage policy settings and object layout. here are the high-level steps: select the sa-payload-02 vm. view the storage policy settings of sa-payload-02. inspect the component placement of the two objects of sa-payload-02. try it or skip </slidetext><slidetext slideid="6pITkaJVU3c.6EYSA78eNwP" slidebank="false" type="slide">vsan object component states </slidetext><slidetext slideid="6pITkaJVU3c.6DLAZnCoIlp" slidebank="false" type="slide">component states        active the component is healthy and up-to-date.   normal operations state       reconfigure an absent or degraded component is being rebuilt elsewhere, or the object is being rebuilt to reflect a change in storage policy.    component rebuilds storage policy change       absent the component is inaccessible, but no explicit error codes are sensed. maintenance operations host outage       active - stale  multiple host failures  with one coming back  up online device failure        degraded the component is inaccessible, with error codes sensed. description scenario the sequence number of the component is not up-to-date.  </slidetext><slidetext slideid="6pITkaJVU3c.5XZCk7vipxA" slidebank="false" type="slide">failure states: absent and degraded detect a failure knows what has  happened? mark the component as degraded mark the component as absent, start a  60-minute timer component recovers within 60 mins? y n y n resync the recovered component rebuild the component ssd or hdd  drive failure host failure network failure </slidetext><slidetext slideid="6pITkaJVU3c.656anzlgxRR" slidebank="false" type="slide">object accessibility 600 gb the rules that determine object accessibility are: at least one complete mirror of the data available. more than 50% of the votes that make up the objects are accessible. 1 vote 1 vote 1 vote quorum: 2 votes </slidetext><slidetext slideid="6pITkaJVU3c.6S8AeMtsLhq" slidebank="false" type="slide">object compliance status compliance status indicates if an object is able to meet the policy requirements assigned to the vm or vmdk. change in component states may show object as “not compliant”. “not compliant” does not always mean object is inaccessible.   absent not compliant accessible 600 gb </slidetext><slidetext slideid="6pITkaJVU3c.5WyTmlfYcE7" slidebank="false" type="slide">demo: examining vm object health with vsan, you can check the compliance status of any vm or vmdk in vsphere web client. this demo will show you how to view a vm object compliance status.  begin demo or skip </slidetext><slidetext slideid="6pITkaJVU3c.5jN0rCONGkf" slidebank="false" type="slide">component rebuilds and resync </slidetext><slidetext slideid="6pITkaJVU3c.5xntsI84Zll" slidebank="false" type="slide">introduction to component rebuilds and resync component resynchronization throttling resync resuming resync intelligent rebuilds rebalancing smart repair partial repair </slidetext><slidetext slideid="6pITkaJVU3c.5YLLXeirSSB" slidebank="false" type="slide">component resynchronization device failure host failure network failure policy change user triggered reconfiguration maintenance mode user  initiated resync user  initiated resync failure initiated resync failure initiated resync 100 gb write write  component loss drive loss host failure failure initiated resync  user  initiated resync  policy change user triggered reconfiguration maintenance mode </slidetext><slidetext slideid="6pITkaJVU3c.6CZSWsnFnry" slidebank="false" type="slide">throttling resync </slidetext><slidetext slideid="6pITkaJVU3c.5Y7I1LoRTzV" slidebank="false" type="slide">resumable resync replica unavailable begin active resync interrupted resume resync track changes complete merge </slidetext><slidetext slideid="6pITkaJVU3c.6PiSLcLpQht" slidebank="false" type="slide">intelligent rebuilds rebuild  rebalancing   smart or intelligent repair      partial repair speed efficiency  click each feature to learn more.  vsphere vsan vsan datastore achieves better balance by splitting large components during redistribution. smarter component placement decisions reduces overhead, resulting in faster recovery times. improved visibility in rebalancing status in health services.  intelligent rebuilds with rebalancing  intelligent rebuilds with smart repairs 600 gb 60 minutes ? ? canceled  intelligent rebuilds with partial repair 600 gb ! </slidetext><slidetext slideid="6pITkaJVU3c.5jFe380fiHO" slidebank="false" type="slide">check your understanding   select the logical component layout to match the storage policy setting below. object mirror 1 component mirror 2 component mirror 3 component  correct next next next that's right! you selected the correct response. for raid-1 configuration, to tolerate 2 failures, you need 3 mirror copies of the components.  you did not select the correct response. the correct answer is displayed for you.  select the logical component layout to match the storage policy setting below. object mirror 1 component mirror 2 component mirror 3 component  that is incorrect. please try again.  </slidetext><slidetext slideid="6pITkaJVU3c.6HS9v6qsm0l" slidebank="false" type="slide">check your understanding   object ftt=1 sw=1 mirror 1 component  mirror 2 component  stripe 1 component  stripe 2 component  select the logical component layout to match the storage policy setting below.  correct next next next that's right! you selected the correct response. in raid-1 configuration, for an object to tolerate one failure in the cluster with a stripe width of 1, you will have two mirror copies of data. because the object size is 400 gb, it will be split into two 200 gb components due to the component size constraint.  you did not select the correct response. the correct answer is displayed for you.  select the logical component layout to match the storage policy setting below.  that is incorrect. please try again.  </slidetext><slidetext slideid="6pITkaJVU3c.5jbdJfBWEzs" slidebank="false" type="slide">which of the following events causes the affected components to be rebuilt immediately? host reboot host reboot host reboot host reboot host reboot host reboot network failure network failure network failure network failure network failure network failure storage controller failure storage controller failure storage controller failure storage controller failure storage controller failure storage controller failure unplugging of a disk unplugging of a disk unplugging of a disk unplugging of a disk unplugging of a disk unplugging of a disk check your understanding  that's right! you selected the correct response. a storage controller failure reports explicit error codes to vsan. vsan will then mark the affected components as degraded and immediately initiate component rebuild.  which of the following events causes the affected components to be rebuilt immediately? host reboot host reboot host reboot host reboot host reboot host reboot network failure network failure network failure network failure network failure network failure storage controller failure storage controller failure storage controller failure storage controller failure storage controller failure storage controller failure unplugging of a disk unplugging of a disk unplugging of a disk unplugging of a disk unplugging of a disk unplugging of a disk incorrect next next next you did not select the correct response. the correct answer is displayed for you.  vsan cannot ascertain the nature of this failure, which can be either transient or permanent, so it marks the affected components as absent, starts a 60-minute timer, but does not immediately rebuild components.  that is incorrect. please try again.  </slidetext><slidetext slideid="6pITkaJVU3c.6axULqYvFs2" slidebank="false" type="slide">which of the following events trigger a resynchronization operation in the cluster? (choose three.) restarting a host restarting a host restarting a host restarting a host restarting a host restarting a host increasing datastore capacity increasing datastore capacity increasing datastore capacity increasing datastore capacity increasing datastore capacity increasing datastore capacity editing a virtual machine storage policy editing a virtual machine storage policy editing a virtual machine storage policy editing a virtual machine storage policy editing a virtual machine storage policy editing a virtual machine storage policy recovering hosts from a long-term failure recovering hosts from a long-term failure recovering hosts from a long-term failure recovering hosts from a long-term failure recovering hosts from a long-term failure recovering hosts from a long-term failure check your understanding exceeding the utilization of a cache device exceeding the utilization of a cache device exceeding the utilization of a cache device exceeding the utilization of a cache device exceeding the utilization of a cache device exceeding the utilization of a cache device  that's right! you selected the correct responses. these events can cause service interruptions that will trigger a resynchronization operation.  restarting a host restarting a host restarting a host restarting a host restarting a host restarting a host increasing datastore capacity increasing datastore capacity increasing datastore capacity increasing datastore capacity increasing datastore capacity increasing datastore capacity editing a virtual machine storage policy editing a virtual machine storage policy editing a virtual machine storage policy editing a virtual machine storage policy editing a virtual machine storage policy editing a virtual machine storage policy recovering hosts from a long-term failure recovering hosts from a long-term failure recovering hosts from a long-term failure recovering hosts from a long-term failure recovering hosts from a long-term failure recovering hosts from a long-term failure exceeding the utilization of a cache device exceeding the utilization of a cache device exceeding the utilization of a cache device exceeding the utilization of a cache device exceeding the utilization of a cache device exceeding the utilization of a cache device which of the following events trigger a resynchronization operation in the cluster? (choose three.) you did not select the correct responses. the correct answers are displayed for you. these events can cause service interruptions that will trigger a resynchronization operation.  that is incorrect. please try again.  </slidetext><slidetext slideid="6pITkaJVU3c.6HgJ8f4yXMf" slidebank="false" type="slide">now that you have completed this module, you should be able to: review of module objectives explain how policies affect the component count describe the different states of components describe the vsan component rebuild and resync process </slidetext><slidetext slideid="6Ahdfb1s79Y.6MAxJrMJS7A" slidebank="false" type="slide">you have viewed the steps to examine vm storage policy settings and physical placement of objects and components using vsphere web client. click next to continue.  you have viewed the steps to examine vm storage policy settings and physical placement of objects and components using vsphere web client. click next to continue. </slidetext><slidetext slideid="5fl8Es68z3f.6oAQh6sdKt5" slidebank="false" type="slide">view vm storage policy settings  select sa-payload-02 in the hosts and clusters view. hint  try again try again try again  select the virtual machine you want to examine. hint  try again try again try again </slidetext><slidetext slideid="5fl8Es68z3f.5auvJOwCTVi" slidebank="false" type="slide"> select the storage policy that is applied to the virtual machine. hint  try again try again try again  select the custom01 storage policy in the vm storage policies panel. hint  try again try again try again </slidetext><slidetext slideid="5fl8Es68z3f.6DlLnm9OVOo" slidebank="false" type="slide"> navigate to view the default storage policy settings. hint  try again try again try again  you can view storage policy settings under the manage tab. hint  try again try again try again </slidetext><slidetext slideid="5fl8Es68z3f.6EtaBepiLIc" slidebank="false" type="slide"> view the ruleset for the policy.  hint  try again try again try again  select rule-set1: vsan to view the vsan capabilities that are used by the vm. hint  try again try again try again </slidetext><slidetext slideid="5fl8Es68z3f.6paTbU51kEG" slidebank="false" type="slide">the policy specifies that failures to tolerate is 1 and stripe width is 2.  you have viewed the storage policy settings of the vm. now, you will inspect the component layout of the objects. try again try again try again hint   click the back button to go back to the summary page. try again try again try again hint  </slidetext><slidetext slideid="5fl8Es68z3f.6eVWrDi6QNf" slidebank="false" type="slide"> hint  navigate back to the vm’s summary page. try again try again try again  click the back button.  hint  try again try again try again </slidetext><slidetext slideid="5fl8Es68z3f.6dVZJ0gQhEN" slidebank="false" type="slide">inspect component placement of  the vm’s objects  the detailed view of storage objects is under the monitor &gt; policies tab.  try again try again try again hint   navigate to view the details of storage objects. hint  try again try again try again </slidetext><slidetext slideid="5fl8Es68z3f.6Zhwgr3DICS" slidebank="false" type="slide"> navigate to view the details of storage objects. try again try again try again hint   click the policies tab. try again try again try again hint  </slidetext><slidetext slideid="5fl8Es68z3f.5cHVoW2CaZz" slidebank="false" type="slide">list of objects that make up the vm  view the component placement of the vm home object. try again try again try again hint   click the physical disk placement tab to view the component layout of the vm home object. try again try again try again hint  </slidetext><slidetext slideid="5fl8Es68z3f.5eaIPBnuEmd" slidebank="false" type="slide">note that the vm home object only implements the number of failures to tolerate requirement, but not the number of disk stripes per object requirement. that’s why you don’t see that the object is striped with two components in a raid-0 configuration.  </slidetext><slidetext slideid="5fl8Es68z3f.5khkvtcHkBj" slidebank="false" type="slide"> select hard disk 1 to view the component placement. try again try again try again hint   select the vm hard disk object to view its component placement. try again try again try again hint  </slidetext><slidetext slideid="5fl8Es68z3f.5vXihclG3ZS" slidebank="false" type="slide">the raid-1 configuration adheres to the number of failures to tolerate requirement. each replica is made up of a raid-0 stripe configuration, and each stripe contains two components, adhering to the number of disk stripes per object requirement of 2. note that stripes are on separate drives, and mirrors are on separate hosts.  you have completed the steps to view the vm storage policy and object distribution.  click next to continue.  you have completed the steps to view the vm storage policy and object distribution.  click next to continue. </slidetext><slidetext slideid="67gNhg3Hh6z.6V0OcLDOwmF" slidebank="false" type="slide">you have viewed the steps to examine a vm object compliance status. click next to continue.  you have viewed the steps to examine a vm object compliance status. click next to continue. </slidetext></search></nav_data><resource_data description="" /><transcript_data><slidetranscripts><slidetranscript slideid="67C16nIaahU.5vGRKXLPzGj" slidebank="false" type="slide" noteswf="story_content/notes/Note67C16nIaahU.5vGRKXLPzGj.swf" pathlib="Lib" pathindex="0">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='2' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Click &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Next&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; to continue.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="67C16nIaahU.61pLwDT1vBe" slidebank="false" type="slide" noteswf="story_content/notes/Note67C16nIaahU.61pLwDT1vBe.swf" pathlib="Lib" pathindex="1">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Welcome to the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#333333'&gt;&lt;b&gt;VMware vSAN&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#333333'&gt;&lt;b&gt;TM&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#333333'&gt;&lt;b&gt;:&lt;/b&gt;&lt;/font&gt;&lt;b&gt; &lt;/b&gt;&lt;font face='Calibri' size='16.5pt' color='#333333'&gt;&lt;b&gt;Monitoring and Troubleshooting Data Availability&lt;/b&gt;&lt;/font&gt; &lt;font face='Calibri' size='16.5pt' color='#000000'&gt;course.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="67C16nIaahU.68wghcZk1mv" slidebank="false" type="slide" noteswf="story_content/notes/Note67C16nIaahU.68wghcZk1mv.swf" pathlib="Lib" pathindex="2">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Here are the objectives of this course.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="67C16nIaahU.6WM7aJkgtOS" slidebank="false" type="slide" noteswf="story_content/notes/Note67C16nIaahU.6WM7aJkgtOS.swf" pathlib="Lib" pathindex="3">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This course has three modules, and here are the topics that we will cover.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6pITkaJVU3c.6fpsQnnGD3r" slidebank="false" type="slide" noteswf="story_content/notes/Note6pITkaJVU3c.6fpsQnnGD3r.swf" pathlib="Lib" pathindex="4">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This module discusses the concepts of vSAN data availability and placement and also covers the features that ensure data availability. The module is to arm you with the troubleshooting knowledge. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6pITkaJVU3c.66jFHYt5w3J" slidebank="false" type="slide" noteswf="story_content/notes/Note6pITkaJVU3c.66jFHYt5w3J.swf" pathlib="Lib" pathindex="5">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Here are the objectives for this module.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6pITkaJVU3c.5tvHzZHWbhF" slidebank="false" type="slide" noteswf="story_content/notes/Note6pITkaJVU3c.5tvHzZHWbhF.swf" pathlib="Lib" pathindex="6">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN is an object-based storage system integrated into vSphere. Virtual machines that live on vSAN storage are made up of a number of storage objects. VMDKs, VM home namespace, VM swap areas, snapshot delta, and snapshot memory are all examples of storage objects in vSAN. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;An object is formed of one or more components. Components may be split into smaller components depending on the size of the objects and environment conditions. The maximum size of a component is 255 GB, meaning that if you have a 600 GB virtual machine disk or VMDK object, as shown in this example, the object is split into three 200 GB components (C1, C2, and C3), so that it can meet the component size constraint.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6pITkaJVU3c.5nqsCWTgUmH" slidebank="false" type="slide" noteswf="story_content/notes/Note6pITkaJVU3c.5nqsCWTgUmH.swf" pathlib="Lib" pathindex="7">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;When vSAN objects are created, various components of that object will be placed in the best possible location in accordance with the policy. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;If an ESXi host fails, you need to keep a copy of the virtual machine's objects on another host, so that the data can survive the host failure. How many copies of the data should be mirrored to different hosts? That’s what a storage policy controls. vSAN uses the concept of a RAID tree to ensure protection of objects. In a storage policy, you can define various levels of protection (RAID-1, RAID-5, and RAID-6) and performance on a per VM, or per VMDK basis. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6pITkaJVU3c.5rvA6wbR51o" slidebank="false" type="slide" noteswf="story_content/notes/Note6pITkaJVU3c.5rvA6wbR51o.swf" pathlib="Lib" pathindex="8">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Component count and placement are determined by the object size, storage policy settings, and environment conditions, such as host number, storage capacity, and so on. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Storage policies dictate the type of RAID configuration (mirroring or erasure coding), the number of storage failures the object can tolerate, and the number of stripes that should be written per object. Based on the stripe and mirroring requirements, the components are replicated and placed across the cluster, and this is how redundancy is provided to a given object.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This image shows the default storage policy’s settings for number of failure to tolerate and stripe width.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6pITkaJVU3c.5lYdQCXBWd6" slidebank="false" type="slide" noteswf="story_content/notes/Note6pITkaJVU3c.5lYdQCXBWd6.swf" pathlib="Lib" pathindex="9">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let’s take a look at some examples.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;If you choose to deploy a VMDK with a stripe width of 2, but did not wish to tolerate any failures, a RAID-0 stripe would be configured across two disks for this VMDK. The VMDK would be the object, and each of the stripes would be a component of that object.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Similarly, if you specified that the VMDK should be able to tolerate at least one failure in the cluster with a stripe width of 1, a RAID-1 mirror of the VMDK object would be created with one replica component on one host and another replica component on another host in your vSAN cluster. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Finally, if your policy included a requirement for both striping and availability, your striped components would be mirrored across hosts, giving you a RAID 0+1 configuration. This would result in four components making up your single object, with two striped components in each replica.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6pITkaJVU3c.6hKkoY513zU" slidebank="false" type="slide" noteswf="story_content/notes/Note6pITkaJVU3c.6hKkoY513zU.swf" pathlib="Lib" pathindex="10">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN makes object placement decisions to meet the number of failures to tolerate, failure tolerance method, and stripe width requirements defined in the storage policy. In this demo, you will learn how to examine VM storage policy settings and physical placement of objects and components using vSphere Web Client.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Log in to vSphere Web Client as an administrator or a user permitted to view VM configuration details. In the Hosts and Clusters view, select the VM that you want to examine. In this demo, let’s take a look at SA-Payload-01.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;On the VM's Summary page, you will see the policy that is applied and its compliance status. In this example, the policy applied is the default storage policy of vSAN datastore. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;All VMs deployed on the vSAN datastore must use a storage policy. If you don’t explicitly pick the policy for a VM, vSAN will automatically assign the default policy to the VM.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let's take a look at the default storage policy settings under the Manage tab. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This page shows the policy’s name and description. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;rule-set1&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The rules in a ruleset are based on specific capabilities exposed by vSAN. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The first one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of failures to tolerate&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The default value specifies that vSAN can tolerate one host failure meaning that the virtual machine data must be stored on at least two hosts.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The second one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of disk drives per object&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. For all-flash vSAN architecture, increasing this number may improve read performance for read-intensive workloads as all reads come directly from the flash devices in the capacity tier. However, for hybrid vSAN architecture, increasing stripe width provides minimal performance benefit as all the reads come from flash devices in the caching tier. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The remaining rules are for other vSAN capabilities that are out of the scope of this course. You can locate the information about these rules in the official vSAN documentation.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let us close this window, and go back to the VM’s Summary page. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This view displays the policy applied and VM compliance status. However, you cannot determine the object layout according to the storage policy.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt; &lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To view this information, go to &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; &amp;gt; &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Policies&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Once on the VM’s Storage Policies page, you will be presented with a summary of the objects associated with the VM. These will include, in most cases, a VM home object and one or more VM disks. It will reflect which policy is applied to each object and whether the object is compliant. What you see here should match the information on the Summary page.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To see where each component that makes up a storage object resides, select the object, in this example Hard disk 1, and then click the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Physical Disk Placement&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; tab in the bottom panel.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;From here, you can see that the VMDK object has a RAID-1 layout with a single mirror and no additional striping per policy. The two components that make up the RAID-1 mirror are placed on two different ESXi hosts, namely sa-esxi-02 and sb-esxi-02. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The quorum-maintenance "witness" is placed on ESXi host sb-esxi-01. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Note that vSAN will never let components, mirrors, and witness, share the same host for availability purposes. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This panel also displays which specific disks are in use for these data objects and witnesses. You can see where the data actually resides and how vSAN has distributed objects to ensure that you can tolerate the loss of any given host in the vSAN cluster and still maintain access to the object.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6pITkaJVU3c.6oL0v1AscMY" slidebank="false" type="slide" noteswf="story_content/notes/Note6pITkaJVU3c.6oL0v1AscMY.swf" pathlib="Lib" pathindex="11">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let us take a look at another example. This time you will complete the tasks of viewing the VM storage policy settings and object layout. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The simulation provides the high-level steps. You need to figure out what actions to take. If you fail an attempt, a hint will be provided.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6pITkaJVU3c.6DLAZnCoIlp" slidebank="false" type="slide" noteswf="story_content/notes/Note6pITkaJVU3c.6DLAZnCoIlp.swf" pathlib="Lib" pathindex="12">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 34, 69, 103, 138, 173]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN has a number of object states that are available, and visible in the UI.  &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 34, 69, 103, 138, 173]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 16, 34, 69, 103, 138, 173]' blockindent='16' indent='-16'&gt;&lt;font face='Symbol' size='16.5pt' color='#000000'&gt;·	&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The active component state indicates a component that is accessible, and it’s &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;the most common state.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 16, 48, 96, 144]' blockindent='16' indent='-16'&gt;&lt;font face='Symbol' size='16.5pt' color='#000000'&gt;·	&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Reconfiguring state is observed when a change to a storage policy is made or a new storage policy is assigned to an object. For example, when the Failure Tolerance Method is changed from RAID-1 mirroring to RAID-5/6 erasure coding on an all-flash vSAN cluster.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 16, 48, 96, 144]' blockindent='16' indent='-16'&gt;&lt;font face='Symbol' size='16.5pt' color='#000000'&gt;·	&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;If an issue occurs that takes a storage device or entire host offline, components on that device are marked as Absent or Degraded depending on the issue.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 16, 48, 96, 144]' blockindent='16' indent='-16'&gt;&lt;font face='Symbol' size='16.5pt' color='#000000'&gt;·	&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;If a component is active, but its sequence number is different or older than the current sequence number for the object, the component is marked as Active - Stale. This usually occurs when the components of an object go offline and come back online concurrently at different times.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6pITkaJVU3c.5XZCk7vipxA" slidebank="false" type="slide" noteswf="story_content/notes/Note6pITkaJVU3c.5XZCk7vipxA.swf" pathlib="Lib" pathindex="13">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let us take a look at the two different failure states Absent and Degraded in more detail as they are fundamental to the operational considerations.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;When a failure has been detected, depending on the nature of failure, vSAN will take immediate action or wait for some period of time (60 minutes). The distinction here is whether or not vSAN knows what has happened to a device or gets explicit error codes. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;If a device such as an SSD reports a permanent error, vSAN will mark the component as Degraded and start to rebuild the component elsewhere in the cluster immediately (if resources allow it).&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;If a host or a network fails, vSAN typically does not know why this happened, or even what has happened exactly. Should this occur, vSAN will mark the component as absent and start a 60-minute count down. If the component comes back within those 60 minutes, vSAN will synchronize the replicas. If the component doesn’t come back, vSAN will recreate the failed component from the surviving component.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6pITkaJVU3c.656anzlgxRR" slidebank="false" type="slide" noteswf="story_content/notes/Note6pITkaJVU3c.656anzlgxRR.swf" pathlib="Lib" pathindex="14">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;There are two important concepts about VM object, compliance, and accessibility. Let us take a look at the object accessibility first. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;For a virtual machine’s storage object to be accessible, first of all, you need to have at least one complete mirror of the data available. In this example, the surviving host in the cluster holds one other copy of three components on the failed host.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Next, you will need to have more than 50 percent of the votes that make up the object be accessible at all times. vSAN supports a quorum-based system where each component has one vote to decide the accessibility of objects. In this example of RAID-1 configuration, you have one host offline and one host running, each of them has one vote, then vSAN uses witness to attain quorum, or the majority of votes.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6pITkaJVU3c.6S8AeMtsLhq" slidebank="false" type="slide" noteswf="story_content/notes/Note6pITkaJVU3c.6S8AeMtsLhq.swf" pathlib="Lib" pathindex="15">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN uses compliance status to indicate if an object is able to meet the policy requirements assigned to the VM or VMDK. Usually when a component’s state changes from active to absent, degraded or stale, the object will be marked as “Not Compliant”. However, “Not Compliant” does not mean object is inaccessible. Most often it means that the object cannot meet full compliance of assigned protection. As shown in the example, the VMDK object is no longer compliant because one of the components, C3 becomes absent, but the object is accessible as one mirror copy of data and a witness is still available.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6pITkaJVU3c.5WyTmlfYcE7" slidebank="false" type="slide" noteswf="story_content/notes/Note6pITkaJVU3c.5WyTmlfYcE7.swf" pathlib="Lib" pathindex="16">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;With vSAN, you can check the compliance status of any VM or VMDK in vSphere Web Client. This demo will show you how to view a VM object compliance status.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN regularly monitors all objects for compliance with storage policies applied to them. If any of the components are absent or degraded for any reason, the object is placed in the Noncompliant state.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Now let's take a look at the component states inside the web client. After logging in to vSphere Web Client, in the Hosts and Clusters view, select the VM that you want to examine. For this example, select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;SA-Payload-01&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Go to &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; &amp;gt; &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Policies&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Once on the VM Storage Policies tab, you will see a summary of the objects associated with the VM and their compliance statuses. Any noncompliant objects will be marked.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;In this example, both VM home and VMDK objects are not compliant. On the Compliance Failures tab, you can see the requirements from the VM storage policy that the object cannot satisfy, which is the availability level in this case.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Here you can see one component and the witness are in an Active state, which means their operations are normal. Another component is in an Absent state, which means this component is not available. This could be caused by the host rebooting, the disk unexpectedly pulled from the host, or network disconnection.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Because we have two of the three components active, the VM home object is still accessible but noncompliant due to the missing mirror.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Losing access to a component typically reduces the availability level of an object, and this is reflected in the vSAN health check report. Let’s navigate to the vSAN cluster. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Click the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; tab.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Click &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;vSAN&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; and select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Virtual Objects&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;You can see that the SA-Payload-01 VM’s object health state is Reduced availability. This means the object is accessible, but has suffered a failure. vSAN is actively working on re-protecting the object by building the new component to bring the object back to compliance. Expand the virtual machine folder.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;A summary of the objects that make up the VM is displayed.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;It’s similar to what you saw previously on the VM’s Monitor &amp;gt; Policies tab.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6pITkaJVU3c.5xntsI84Zll" slidebank="false" type="slide" noteswf="story_content/notes/Note6pITkaJVU3c.5xntsI84Zll.swf" pathlib="Lib" pathindex="17">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The ability to restore an object to its desired level of compliance for protection is a primary duty for vSAN. When an object is reported as absent or degraded, the object will remain available for use, but not in a redundant state. vSAN will identify components that go absent or degraded, and begin a rebuild and resync process to regain its level of compliance as defined in the protection policy. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;In this section, we will take a look at the self-healing mechanisms and features of vSAN that are designed to improve the resiliency and efficiency of the process.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6pITkaJVU3c.5YLLXeirSSB" slidebank="false" type="slide" noteswf="story_content/notes/Note6pITkaJVU3c.5YLLXeirSSB.swf" pathlib="Lib" pathindex="18">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Resynchronization of components is the result of service interruptions as well as internal processes by which vSAN balances components across hosts, disk groups, and drives. A service might be interrupted, by a failed hardware device, host, or network failure. Another possibility is a voluntary interruption by placing a host into maintenance mode, or changing a policy. For these and many other events, vSAN initiates resynchronization in the vSAN cluster.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;How does the resynchronization of components actually work? vSAN uses a bitmap to keep track of changed blocks in the event of components being unable to synchronize due to a failure of host or network. Let us use an example to explain this. If the host with replica B of the VMDK object goes offline, the surviving component, replica A continues serving writes and reads. While replica B is absent, all writes performed to replica A are persistently tracked in a bitmap by vSAN, that is, the bitmap are tracking the regions that are out of sync. If the host with replica B comes back and vSAN decides to reintegrate it with the remaining components, the bitmap is used to resynchronize component B.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6pITkaJVU3c.6CZSWsnFnry" slidebank="false" type="slide" noteswf="story_content/notes/Note6pITkaJVU3c.6CZSWsnFnry.swf" pathlib="Lib" pathindex="19">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Depending on the volume of data to resync and the available bandwidth, network latency may be negatively impacted. vSAN 6.6 adds the ability to throttle the resync operation to the extent that it does not impact the performance of VMs.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;You can throttle resync operations with a bandwidth cap from the UI as shown here. Then the resync operations never consume more bandwidth than is specified in the setting. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;However this option shouldn’t be enabled by default as throttling resync means longer resync time, and the prolonged resync may increase the window of exposure during which any additional failures may result in some objects becoming inaccessible. This feature should only be used when directed by VMware Support.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6pITkaJVU3c.5Y7I1LoRTzV" slidebank="false" type="slide" noteswf="story_content/notes/Note6pITkaJVU3c.5Y7I1LoRTzV.swf" pathlib="Lib" pathindex="20">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;In prior editions of vSAN, an interrupted resync would need to start the resync process from the beginning. An example of a resync interruption includes an absent host coming back online and running the resync process, followed by a brief network interruption. vSAN 6.6 is now able to transparently resume a resync operation where it left off following an interruption, avoiding the need to reprocess already resynchronized data.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Resumable resyncs are achieved by accepting writes and tracking the changes on the component that remains available. vSAN identifies the last write that the component has when the host containing the component goes offline, while keeping the previous effort of resynchronized data. The updated writes that are committed to the component that is still available are tracked separately from the original resync tracking. Once the component comes back from being temporarily unavailable, the tracked changes on the active components are merged into the components that are temporarily offline so that it can resume the resynchronization process. As data is resynchronized, vSAN will incrementally update its understanding of what data has been committed so that in the event of another incremental outage, it does not have to resync data that is already synchronized.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6pITkaJVU3c.6PiSLcLpQht" slidebank="false" type="slide" noteswf="story_content/notes/Note6pITkaJVU3c.6PiSLcLpQht.swf" pathlib="Lib" pathindex="21">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Intelligent rebuilds comprise a set of controls that give vSAN the ability to have self-healing mechanisms in place while incurring minimal interference with the primary workloads.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The rebuild process takes into account a number of factors, including component size, distribution of objects, storage policy conditions, and capacity remaining on devices. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN 6.6 manages the repair and rebuild process in the most efficient way possible with the following features:&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Symbol' size='16.5pt' color='#000000'&gt;·	&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Rebalancing&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Symbol' size='16.5pt' color='#000000'&gt;·	&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Smart or Intelligent Repair &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Symbol' size='16.5pt' color='#000000'&gt;·	&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Partial Repair&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;i&gt;Click each feature to learn more.&lt;/i&gt;&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Rebalancing: &lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Rebalancing is the act of redistributing components across the hosts that comprise a vSAN datastore. vSAN will automatically rebalance an environment when the capacity on any device reaches over 80%, known as reactive rebalancing, or you can proactively run a rebalancing operation when disks are less than 80% full, and if a single disk has consumed 30% more capacity than the disk with the lowest used capacity. vSAN automatically checks for these conditions, and will provide a health check alert to you.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;In vSAN 6.6, a number of enhancements have been made in rebalancing:&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Symbol' size='16.5pt' color='#000000'&gt;·	&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN 6.6 can now take an individual large component and break it into smaller pieces for more optimal distribution. During the rebalancing process, if vSAN finds a new disk with sufficient capacity for the component, without the need for breaking into multiple components, it will place the component there in its entirety, and not split the component. If vSAN can't find a new disk without breaking up the component, it will break into two, and retry the rebalancing effort. If it still cannot find a disk after the initial split, it will continue to further divide the component, and retry the previous step. This logic will be followed for up to eight splits. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Symbol' size='16.5pt' color='#000000'&gt;·	&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;When determining the best strategy for moving components, vSAN 6.6 factors in additional information about the components on disks exceeding 80% capacity. vSAN 6.6 uses a more sophisticated selection process to prioritize components so that the components selected for moving will make a more meaningful difference in the rebalancing effort.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Improvements have been made in vSAN 6.6 to make it much easier to report the number of bytes being moved out for rebalancing, and new resync graphs have been introduced in the performance service so that resync traffic can be monitored in greater detail.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Smart or intelligent repair: &lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;In vSAN 6.6, key enhancements have been made in the effort of compliance of protection policies to objects, while minimizing resources used for a rebuild.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;When a host or device in a vSAN cluster is unexpectedly offline, and no explicit error codes are sensed, vSAN will mark the entire set of components Absent and start a 60-minute timer. If the host doesn’t come back online after 60 minutes, vSAN will start rebuilding the components on a new host. However, if the affected host or device comes back online shortly after the 60-minute window, vSAN will look at the amount of data remaining for components rebuild to complete, versus how long it would take to resync the outdated components on the recently restored host, and choose the one with the lower cost and cancel the other rebuild operation.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN 6.6 uses the new logic in determining the best method for repair. This is extremely beneficial for hosts that are in their maintenance window just slightly longer than the 60-minute timeout period, as well as for hosts that hold a large amount of consumed capacity for objects.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Partial repair: &lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;In vSAN 6.6, the rebuild process has been enhanced through the concept of "partial repairs." How do the partial repairs work?&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Before vSAN creates a new mirror copy of the degraded or absent components, it will validate whether sufficient resources exist to store the new copy. If vSAN finds out there are not enough resources to ensure full compliance, it will still repair as many degraded or absent components as possible. The remaining components will be repaired as soon as enough resources are available, like adding a new host as shown in this example. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Previous editions of vSAN would not execute a repair effort if there weren’t enough resources to repair all of the degraded or absent components in entirety. The repair process in vSAN 6.6 takes a more opportunistic approach to healing by repairing as many degraded, or absent components as possible. The effective result is that an object might remain non-compliant after a partial repair, but will still gain increased availability from those components that are able to be repaired.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6pITkaJVU3c.6HgJ8f4yXMf" slidebank="false" type="slide" noteswf="story_content/notes/Note6pITkaJVU3c.6HgJ8f4yXMf.swf" pathlib="Lib" pathindex="22">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Take a moment to review the objectives for this module.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6Ahdfb1s79Y.5lNDbAwCUeW" slidebank="false" type="slide" noteswf="story_content/notes/Note6Ahdfb1s79Y.5lNDbAwCUeW.swf" pathlib="Lib" pathindex="23">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN makes object placement decisions to meet the number of failures to tolerate, failure tolerance method, and stripe width requirements defined in the storage policy. In this demo, you will learn how to examine VM storage policy settings and physical placement of objects and components using vSphere Web Client.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Log in to vSphere Web Client as an administrator or a user permitted to view VM configuration details. In the Hosts and Clusters view, select the VM that you want to examine. In this demo, let’s take a look at SA-Payload-01.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;On the VM's Summary page, you will see the policy that is applied and its compliance status. In this example, the policy applied is the default storage policy of vSAN datastore. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;All VMs deployed on the vSAN datastore must use a storage policy. If you don’t explicitly pick the policy for a VM, vSAN will automatically assign the default policy to the VM.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let's take a look at the default storage policy settings under the Manage tab. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This page shows the policy’s name and description. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;rule-set1&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The rules in a ruleset are based on specific capabilities exposed by vSAN. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The first one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of failures to tolerate&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The default value specifies that vSAN can tolerate one host failure meaning that the virtual machine data must be stored on at least two hosts.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The second one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of disk drives per object&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. For all-flash vSAN architecture, increasing this number may improve read performance for read-intensive workloads as all reads come directly from the flash devices in the capacity tier. However, for hybrid vSAN architecture, increasing stripe width provides minimal performance benefit as all the reads come from flash devices in the caching tier. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The remaining rules are for other vSAN capabilities that are out of the scope of this course. You can locate the information about these rules in the official vSAN documentation.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let us close this window, and go back to the VM’s Summary page. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This view displays the policy applied and VM compliance status. However, you cannot determine the object layout according to the storage policy. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To view this information, go to &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; &amp;gt; &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Policies&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Once on the VM’s Storage Policies page, you will be presented with a summary of the objects associated with the VM. These will include, in most cases, a VM home object and one or more VM disks. It will reflect which policy is applied to each object and whether the object is compliant. What you see here should match the information on the Summary page.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To see where each component that makes up a storage object resides, select the object, in this example Hard disk 1, and then click the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Physical Disk Placement&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; tab in the bottom panel.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;From here, you can see that the VMDK object has a RAID-1 layout with a single mirror and no additional striping per policy. The two components that make up the RAID-1 mirror are placed on two different ESXi hosts, namely sa-esxi-02 and sb-esxi-02. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The quorum-maintenance "witness" is placed on ESXi host sb-esxi-01. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Note that vSAN will never let components, mirrors, and witness, share the same host for availability purposes. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This panel also displays which specific disks are in use for these data objects and witnesses. You can see where the data actually resides and how vSAN has distributed objects to ensure that you can tolerate the loss of any given host in the vSAN cluster and still maintain access to the object.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6Ahdfb1s79Y.6KgJcQKp57e" slidebank="false" type="slide" noteswf="story_content/notes/Note6Ahdfb1s79Y.6KgJcQKp57e.swf" pathlib="Lib" pathindex="23">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN makes object placement decisions to meet the number of failures to tolerate, failure tolerance method, and stripe width requirements defined in the storage policy. In this demo, you will learn how to examine VM storage policy settings and physical placement of objects and components using vSphere Web Client.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Log in to vSphere Web Client as an administrator or a user permitted to view VM configuration details. In the Hosts and Clusters view, select the VM that you want to examine. In this demo, let’s take a look at SA-Payload-01.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;On the VM's Summary page, you will see the policy that is applied and its compliance status. In this example, the policy applied is the default storage policy of vSAN datastore. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;All VMs deployed on the vSAN datastore must use a storage policy. If you don’t explicitly pick the policy for a VM, vSAN will automatically assign the default policy to the VM.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let's take a look at the default storage policy settings under the Manage tab. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This page shows the policy’s name and description. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;rule-set1&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The rules in a ruleset are based on specific capabilities exposed by vSAN. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The first one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of failures to tolerate&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The default value specifies that vSAN can tolerate one host failure meaning that the virtual machine data must be stored on at least two hosts.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The second one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of disk drives per object&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. For all-flash vSAN architecture, increasing this number may improve read performance for read-intensive workloads as all reads come directly from the flash devices in the capacity tier. However, for hybrid vSAN architecture, increasing stripe width provides minimal performance benefit as all the reads come from flash devices in the caching tier. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The remaining rules are for other vSAN capabilities that are out of the scope of this course. You can locate the information about these rules in the official vSAN documentation.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let us close this window, and go back to the VM’s Summary page. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This view displays the policy applied and VM compliance status. However, you cannot determine the object layout according to the storage policy. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To view this information, go to &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; &amp;gt; &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Policies&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Once on the VM’s Storage Policies page, you will be presented with a summary of the objects associated with the VM. These will include, in most cases, a VM home object and one or more VM disks. It will reflect which policy is applied to each object and whether the object is compliant. What you see here should match the information on the Summary page.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To see where each component that makes up a storage object resides, select the object, in this example Hard disk 1, and then click the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Physical Disk Placement&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; tab in the bottom panel.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;From here, you can see that the VMDK object has a RAID-1 layout with a single mirror and no additional striping per policy. The two components that make up the RAID-1 mirror are placed on two different ESXi hosts, namely sa-esxi-02 and sb-esxi-02. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The quorum-maintenance "witness" is placed on ESXi host sb-esxi-01. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Note that vSAN will never let components, mirrors, and witness, share the same host for availability purposes. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This panel also displays which specific disks are in use for these data objects and witnesses. You can see where the data actually resides and how vSAN has distributed objects to ensure that you can tolerate the loss of any given host in the vSAN cluster and still maintain access to the object.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6Ahdfb1s79Y.6qXWwa0ZVjZ" slidebank="false" type="slide" noteswf="story_content/notes/Note6Ahdfb1s79Y.6qXWwa0ZVjZ.swf" pathlib="Lib" pathindex="23">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN makes object placement decisions to meet the number of failures to tolerate, failure tolerance method, and stripe width requirements defined in the storage policy. In this demo, you will learn how to examine VM storage policy settings and physical placement of objects and components using vSphere Web Client.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Log in to vSphere Web Client as an administrator or a user permitted to view VM configuration details. In the Hosts and Clusters view, select the VM that you want to examine. In this demo, let’s take a look at SA-Payload-01.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;On the VM's Summary page, you will see the policy that is applied and its compliance status. In this example, the policy applied is the default storage policy of vSAN datastore. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;All VMs deployed on the vSAN datastore must use a storage policy. If you don’t explicitly pick the policy for a VM, vSAN will automatically assign the default policy to the VM.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let's take a look at the default storage policy settings under the Manage tab. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This page shows the policy’s name and description. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;rule-set1&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The rules in a ruleset are based on specific capabilities exposed by vSAN. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The first one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of failures to tolerate&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The default value specifies that vSAN can tolerate one host failure meaning that the virtual machine data must be stored on at least two hosts.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The second one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of disk drives per object&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. For all-flash vSAN architecture, increasing this number may improve read performance for read-intensive workloads as all reads come directly from the flash devices in the capacity tier. However, for hybrid vSAN architecture, increasing stripe width provides minimal performance benefit as all the reads come from flash devices in the caching tier. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The remaining rules are for other vSAN capabilities that are out of the scope of this course. You can locate the information about these rules in the official vSAN documentation.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let us close this window, and go back to the VM’s Summary page. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This view displays the policy applied and VM compliance status. However, you cannot determine the object layout according to the storage policy. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To view this information, go to &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; &amp;gt; &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Policies&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Once on the VM’s Storage Policies page, you will be presented with a summary of the objects associated with the VM. These will include, in most cases, a VM home object and one or more VM disks. It will reflect which policy is applied to each object and whether the object is compliant. What you see here should match the information on the Summary page.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To see where each component that makes up a storage object resides, select the object, in this example Hard disk 1, and then click the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Physical Disk Placement&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; tab in the bottom panel.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;From here, you can see that the VMDK object has a RAID-1 layout with a single mirror and no additional striping per policy. The two components that make up the RAID-1 mirror are placed on two different ESXi hosts, namely sa-esxi-02 and sb-esxi-02. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The quorum-maintenance "witness" is placed on ESXi host sb-esxi-01. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Note that vSAN will never let components, mirrors, and witness, share the same host for availability purposes. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This panel also displays which specific disks are in use for these data objects and witnesses. You can see where the data actually resides and how vSAN has distributed objects to ensure that you can tolerate the loss of any given host in the vSAN cluster and still maintain access to the object.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6Ahdfb1s79Y.6qBH1jecNQV" slidebank="false" type="slide" noteswf="story_content/notes/Note6Ahdfb1s79Y.6qBH1jecNQV.swf" pathlib="Lib" pathindex="23">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN makes object placement decisions to meet the number of failures to tolerate, failure tolerance method, and stripe width requirements defined in the storage policy. In this demo, you will learn how to examine VM storage policy settings and physical placement of objects and components using vSphere Web Client.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Log in to vSphere Web Client as an administrator or a user permitted to view VM configuration details. In the Hosts and Clusters view, select the VM that you want to examine. In this demo, let’s take a look at SA-Payload-01.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;On the VM's Summary page, you will see the policy that is applied and its compliance status. In this example, the policy applied is the default storage policy of vSAN datastore. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;All VMs deployed on the vSAN datastore must use a storage policy. If you don’t explicitly pick the policy for a VM, vSAN will automatically assign the default policy to the VM.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let's take a look at the default storage policy settings under the Manage tab. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This page shows the policy’s name and description. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;rule-set1&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The rules in a ruleset are based on specific capabilities exposed by vSAN. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The first one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of failures to tolerate&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The default value specifies that vSAN can tolerate one host failure meaning that the virtual machine data must be stored on at least two hosts.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The second one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of disk drives per object&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. For all-flash vSAN architecture, increasing this number may improve read performance for read-intensive workloads as all reads come directly from the flash devices in the capacity tier. However, for hybrid vSAN architecture, increasing stripe width provides minimal performance benefit as all the reads come from flash devices in the caching tier. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The remaining rules are for other vSAN capabilities that are out of the scope of this course. You can locate the information about these rules in the official vSAN documentation.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let us close this window, and go back to the VM’s Summary page. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This view displays the policy applied and VM compliance status. However, you cannot determine the object layout according to the storage policy. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To view this information, go to &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; &amp;gt; &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Policies&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Once on the VM’s Storage Policies page, you will be presented with a summary of the objects associated with the VM. These will include, in most cases, a VM home object and one or more VM disks. It will reflect which policy is applied to each object and whether the object is compliant. What you see here should match the information on the Summary page.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To see where each component that makes up a storage object resides, select the object, in this example Hard disk 1, and then click the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Physical Disk Placement&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; tab in the bottom panel.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;From here, you can see that the VMDK object has a RAID-1 layout with a single mirror and no additional striping per policy. The two components that make up the RAID-1 mirror are placed on two different ESXi hosts, namely sa-esxi-02 and sb-esxi-02. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The quorum-maintenance "witness" is placed on ESXi host sb-esxi-01. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Note that vSAN will never let components, mirrors, and witness, share the same host for availability purposes. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This panel also displays which specific disks are in use for these data objects and witnesses. You can see where the data actually resides and how vSAN has distributed objects to ensure that you can tolerate the loss of any given host in the vSAN cluster and still maintain access to the object.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6Ahdfb1s79Y.6P02x2w3duY" slidebank="false" type="slide" noteswf="story_content/notes/Note6Ahdfb1s79Y.6P02x2w3duY.swf" pathlib="Lib" pathindex="23">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN makes object placement decisions to meet the number of failures to tolerate, failure tolerance method, and stripe width requirements defined in the storage policy. In this demo, you will learn how to examine VM storage policy settings and physical placement of objects and components using vSphere Web Client.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Log in to vSphere Web Client as an administrator or a user permitted to view VM configuration details. In the Hosts and Clusters view, select the VM that you want to examine. In this demo, let’s take a look at SA-Payload-01.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;On the VM's Summary page, you will see the policy that is applied and its compliance status. In this example, the policy applied is the default storage policy of vSAN datastore. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;All VMs deployed on the vSAN datastore must use a storage policy. If you don’t explicitly pick the policy for a VM, vSAN will automatically assign the default policy to the VM.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let's take a look at the default storage policy settings under the Manage tab. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This page shows the policy’s name and description. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;rule-set1&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The rules in a ruleset are based on specific capabilities exposed by vSAN. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The first one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of failures to tolerate&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The default value specifies that vSAN can tolerate one host failure meaning that the virtual machine data must be stored on at least two hosts.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The second one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of disk drives per object&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. For all-flash vSAN architecture, increasing this number may improve read performance for read-intensive workloads as all reads come directly from the flash devices in the capacity tier. However, for hybrid vSAN architecture, increasing stripe width provides minimal performance benefit as all the reads come from flash devices in the caching tier. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The remaining rules are for other vSAN capabilities that are out of the scope of this course. You can locate the information about these rules in the official vSAN documentation.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let us close this window, and go back to the VM’s Summary page. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This view displays the policy applied and VM compliance status. However, you cannot determine the object layout according to the storage policy. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To view this information, go to &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; &amp;gt; &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Policies&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Once on the VM’s Storage Policies page, you will be presented with a summary of the objects associated with the VM. These will include, in most cases, a VM home object and one or more VM disks. It will reflect which policy is applied to each object and whether the object is compliant. What you see here should match the information on the Summary page.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To see where each component that makes up a storage object resides, select the object, in this example Hard disk 1, and then click the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Physical Disk Placement&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; tab in the bottom panel.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;From here, you can see that the VMDK object has a RAID-1 layout with a single mirror and no additional striping per policy. The two components that make up the RAID-1 mirror are placed on two different ESXi hosts, namely sa-esxi-02 and sb-esxi-02. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The quorum-maintenance "witness" is placed on ESXi host sb-esxi-01. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Note that vSAN will never let components, mirrors, and witness, share the same host for availability purposes. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This panel also displays which specific disks are in use for these data objects and witnesses. You can see where the data actually resides and how vSAN has distributed objects to ensure that you can tolerate the loss of any given host in the vSAN cluster and still maintain access to the object.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6Ahdfb1s79Y.6jpyga2Mt7t" slidebank="false" type="slide" noteswf="story_content/notes/Note6Ahdfb1s79Y.6jpyga2Mt7t.swf" pathlib="Lib" pathindex="23">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN makes object placement decisions to meet the number of failures to tolerate, failure tolerance method, and stripe width requirements defined in the storage policy. In this demo, you will learn how to examine VM storage policy settings and physical placement of objects and components using vSphere Web Client.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Log in to vSphere Web Client as an administrator or a user permitted to view VM configuration details. In the Hosts and Clusters view, select the VM that you want to examine. In this demo, let’s take a look at SA-Payload-01.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;On the VM's Summary page, you will see the policy that is applied and its compliance status. In this example, the policy applied is the default storage policy of vSAN datastore. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;All VMs deployed on the vSAN datastore must use a storage policy. If you don’t explicitly pick the policy for a VM, vSAN will automatically assign the default policy to the VM.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let's take a look at the default storage policy settings under the Manage tab. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This page shows the policy’s name and description. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;rule-set1&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The rules in a ruleset are based on specific capabilities exposed by vSAN. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The first one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of failures to tolerate&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The default value specifies that vSAN can tolerate one host failure meaning that the virtual machine data must be stored on at least two hosts.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The second one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of disk drives per object&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. For all-flash vSAN architecture, increasing this number may improve read performance for read-intensive workloads as all reads come directly from the flash devices in the capacity tier. However, for hybrid vSAN architecture, increasing stripe width provides minimal performance benefit as all the reads come from flash devices in the caching tier. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The remaining rules are for other vSAN capabilities that are out of the scope of this course. You can locate the information about these rules in the official vSAN documentation.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let us close this window, and go back to the VM’s Summary page. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This view displays the policy applied and VM compliance status. However, you cannot determine the object layout according to the storage policy. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To view this information, go to &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; &amp;gt; &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Policies&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Once on the VM’s Storage Policies page, you will be presented with a summary of the objects associated with the VM. These will include, in most cases, a VM home object and one or more VM disks. It will reflect which policy is applied to each object and whether the object is compliant. What you see here should match the information on the Summary page.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To see where each component that makes up a storage object resides, select the object, in this example Hard disk 1, and then click the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Physical Disk Placement&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; tab in the bottom panel.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;From here, you can see that the VMDK object has a RAID-1 layout with a single mirror and no additional striping per policy. The two components that make up the RAID-1 mirror are placed on two different ESXi hosts, namely sa-esxi-02 and sb-esxi-02. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The quorum-maintenance "witness" is placed on ESXi host sb-esxi-01. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Note that vSAN will never let components, mirrors, and witness, share the same host for availability purposes. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This panel also displays which specific disks are in use for these data objects and witnesses. You can see where the data actually resides and how vSAN has distributed objects to ensure that you can tolerate the loss of any given host in the vSAN cluster and still maintain access to the object.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6Ahdfb1s79Y.6ggqMWrXC97" slidebank="false" type="slide" noteswf="story_content/notes/Note6Ahdfb1s79Y.6ggqMWrXC97.swf" pathlib="Lib" pathindex="23">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN makes object placement decisions to meet the number of failures to tolerate, failure tolerance method, and stripe width requirements defined in the storage policy. In this demo, you will learn how to examine VM storage policy settings and physical placement of objects and components using vSphere Web Client.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Log in to vSphere Web Client as an administrator or a user permitted to view VM configuration details. In the Hosts and Clusters view, select the VM that you want to examine. In this demo, let’s take a look at SA-Payload-01.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;On the VM's Summary page, you will see the policy that is applied and its compliance status. In this example, the policy applied is the default storage policy of vSAN datastore. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;All VMs deployed on the vSAN datastore must use a storage policy. If you don’t explicitly pick the policy for a VM, vSAN will automatically assign the default policy to the VM.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let's take a look at the default storage policy settings under the Manage tab. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This page shows the policy’s name and description. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;rule-set1&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The rules in a ruleset are based on specific capabilities exposed by vSAN. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The first one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of failures to tolerate&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The default value specifies that vSAN can tolerate one host failure meaning that the virtual machine data must be stored on at least two hosts.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The second one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of disk drives per object&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. For all-flash vSAN architecture, increasing this number may improve read performance for read-intensive workloads as all reads come directly from the flash devices in the capacity tier. However, for hybrid vSAN architecture, increasing stripe width provides minimal performance benefit as all the reads come from flash devices in the caching tier. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The remaining rules are for other vSAN capabilities that are out of the scope of this course. You can locate the information about these rules in the official vSAN documentation.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let us close this window, and go back to the VM’s Summary page. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This view displays the policy applied and VM compliance status. However, you cannot determine the object layout according to the storage policy. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To view this information, go to &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; &amp;gt; &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Policies&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Once on the VM’s Storage Policies page, you will be presented with a summary of the objects associated with the VM. These will include, in most cases, a VM home object and one or more VM disks. It will reflect which policy is applied to each object and whether the object is compliant. What you see here should match the information on the Summary page.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To see where each component that makes up a storage object resides, select the object, in this example Hard disk 1, and then click the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Physical Disk Placement&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; tab in the bottom panel.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;From here, you can see that the VMDK object has a RAID-1 layout with a single mirror and no additional striping per policy. The two components that make up the RAID-1 mirror are placed on two different ESXi hosts, namely sa-esxi-02 and sb-esxi-02. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The quorum-maintenance "witness" is placed on ESXi host sb-esxi-01. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Note that vSAN will never let components, mirrors, and witness, share the same host for availability purposes. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This panel also displays which specific disks are in use for these data objects and witnesses. You can see where the data actually resides and how vSAN has distributed objects to ensure that you can tolerate the loss of any given host in the vSAN cluster and still maintain access to the object.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6Ahdfb1s79Y.5eGjf1PRyJd" slidebank="false" type="slide" noteswf="story_content/notes/Note6Ahdfb1s79Y.5eGjf1PRyJd.swf" pathlib="Lib" pathindex="23">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN makes object placement decisions to meet the number of failures to tolerate, failure tolerance method, and stripe width requirements defined in the storage policy. In this demo, you will learn how to examine VM storage policy settings and physical placement of objects and components using vSphere Web Client.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Log in to vSphere Web Client as an administrator or a user permitted to view VM configuration details. In the Hosts and Clusters view, select the VM that you want to examine. In this demo, let’s take a look at SA-Payload-01.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;On the VM's Summary page, you will see the policy that is applied and its compliance status. In this example, the policy applied is the default storage policy of vSAN datastore. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;All VMs deployed on the vSAN datastore must use a storage policy. If you don’t explicitly pick the policy for a VM, vSAN will automatically assign the default policy to the VM.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let's take a look at the default storage policy settings under the Manage tab. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This page shows the policy’s name and description. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;rule-set1&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The rules in a ruleset are based on specific capabilities exposed by vSAN. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The first one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of failures to tolerate&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The default value specifies that vSAN can tolerate one host failure meaning that the virtual machine data must be stored on at least two hosts.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The second one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of disk drives per object&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. For all-flash vSAN architecture, increasing this number may improve read performance for read-intensive workloads as all reads come directly from the flash devices in the capacity tier. However, for hybrid vSAN architecture, increasing stripe width provides minimal performance benefit as all the reads come from flash devices in the caching tier. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The remaining rules are for other vSAN capabilities that are out of the scope of this course. You can locate the information about these rules in the official vSAN documentation.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let us close this window, and go back to the VM’s Summary page. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This view displays the policy applied and VM compliance status. However, you cannot determine the object layout according to the storage policy. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To view this information, go to &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; &amp;gt; &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Policies&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Once on the VM’s Storage Policies page, you will be presented with a summary of the objects associated with the VM. These will include, in most cases, a VM home object and one or more VM disks. It will reflect which policy is applied to each object and whether the object is compliant. What you see here should match the information on the Summary page.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To see where each component that makes up a storage object resides, select the object, in this example Hard disk 1, and then click the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Physical Disk Placement&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; tab in the bottom panel.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;From here, you can see that the VMDK object has a RAID-1 layout with a single mirror and no additional striping per policy. The two components that make up the RAID-1 mirror are placed on two different ESXi hosts, namely sa-esxi-02 and sb-esxi-02. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The quorum-maintenance "witness" is placed on ESXi host sb-esxi-01. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Note that vSAN will never let components, mirrors, and witness, share the same host for availability purposes. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This panel also displays which specific disks are in use for these data objects and witnesses. You can see where the data actually resides and how vSAN has distributed objects to ensure that you can tolerate the loss of any given host in the vSAN cluster and still maintain access to the object.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6Ahdfb1s79Y.6IoFF4FKWYN" slidebank="false" type="slide" noteswf="story_content/notes/Note6Ahdfb1s79Y.6IoFF4FKWYN.swf" pathlib="Lib" pathindex="23">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN makes object placement decisions to meet the number of failures to tolerate, failure tolerance method, and stripe width requirements defined in the storage policy. In this demo, you will learn how to examine VM storage policy settings and physical placement of objects and components using vSphere Web Client.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Log in to vSphere Web Client as an administrator or a user permitted to view VM configuration details. In the Hosts and Clusters view, select the VM that you want to examine. In this demo, let’s take a look at SA-Payload-01.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;On the VM's Summary page, you will see the policy that is applied and its compliance status. In this example, the policy applied is the default storage policy of vSAN datastore. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;All VMs deployed on the vSAN datastore must use a storage policy. If you don’t explicitly pick the policy for a VM, vSAN will automatically assign the default policy to the VM.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let's take a look at the default storage policy settings under the Manage tab. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This page shows the policy’s name and description. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;rule-set1&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The rules in a ruleset are based on specific capabilities exposed by vSAN. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The first one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of failures to tolerate&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The default value specifies that vSAN can tolerate one host failure meaning that the virtual machine data must be stored on at least two hosts.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The second one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of disk drives per object&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. For all-flash vSAN architecture, increasing this number may improve read performance for read-intensive workloads as all reads come directly from the flash devices in the capacity tier. However, for hybrid vSAN architecture, increasing stripe width provides minimal performance benefit as all the reads come from flash devices in the caching tier. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The remaining rules are for other vSAN capabilities that are out of the scope of this course. You can locate the information about these rules in the official vSAN documentation.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let us close this window, and go back to the VM’s Summary page. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This view displays the policy applied and VM compliance status. However, you cannot determine the object layout according to the storage policy. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To view this information, go to &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; &amp;gt; &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Policies&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Once on the VM’s Storage Policies page, you will be presented with a summary of the objects associated with the VM. These will include, in most cases, a VM home object and one or more VM disks. It will reflect which policy is applied to each object and whether the object is compliant. What you see here should match the information on the Summary page.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To see where each component that makes up a storage object resides, select the object, in this example Hard disk 1, and then click the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Physical Disk Placement&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; tab in the bottom panel.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;From here, you can see that the VMDK object has a RAID-1 layout with a single mirror and no additional striping per policy. The two components that make up the RAID-1 mirror are placed on two different ESXi hosts, namely sa-esxi-02 and sb-esxi-02. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The quorum-maintenance "witness" is placed on ESXi host sb-esxi-01. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Note that vSAN will never let components, mirrors, and witness, share the same host for availability purposes. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This panel also displays which specific disks are in use for these data objects and witnesses. You can see where the data actually resides and how vSAN has distributed objects to ensure that you can tolerate the loss of any given host in the vSAN cluster and still maintain access to the object.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6Ahdfb1s79Y.5jCenjAA937" slidebank="false" type="slide" noteswf="story_content/notes/Note6Ahdfb1s79Y.5jCenjAA937.swf" pathlib="Lib" pathindex="23">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN makes object placement decisions to meet the number of failures to tolerate, failure tolerance method, and stripe width requirements defined in the storage policy. In this demo, you will learn how to examine VM storage policy settings and physical placement of objects and components using vSphere Web Client.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Log in to vSphere Web Client as an administrator or a user permitted to view VM configuration details. In the Hosts and Clusters view, select the VM that you want to examine. In this demo, let’s take a look at SA-Payload-01.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;On the VM's Summary page, you will see the policy that is applied and its compliance status. In this example, the policy applied is the default storage policy of vSAN datastore. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;All VMs deployed on the vSAN datastore must use a storage policy. If you don’t explicitly pick the policy for a VM, vSAN will automatically assign the default policy to the VM.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let's take a look at the default storage policy settings under the Manage tab. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This page shows the policy’s name and description. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;rule-set1&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The rules in a ruleset are based on specific capabilities exposed by vSAN. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The first one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of failures to tolerate&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The default value specifies that vSAN can tolerate one host failure meaning that the virtual machine data must be stored on at least two hosts.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The second one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of disk drives per object&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. For all-flash vSAN architecture, increasing this number may improve read performance for read-intensive workloads as all reads come directly from the flash devices in the capacity tier. However, for hybrid vSAN architecture, increasing stripe width provides minimal performance benefit as all the reads come from flash devices in the caching tier. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The remaining rules are for other vSAN capabilities that are out of the scope of this course. You can locate the information about these rules in the official vSAN documentation.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let us close this window, and go back to the VM’s Summary page. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This view displays the policy applied and VM compliance status. However, you cannot determine the object layout according to the storage policy. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To view this information, go to &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; &amp;gt; &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Policies&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Once on the VM’s Storage Policies page, you will be presented with a summary of the objects associated with the VM. These will include, in most cases, a VM home object and one or more VM disks. It will reflect which policy is applied to each object and whether the object is compliant. What you see here should match the information on the Summary page.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To see where each component that makes up a storage object resides, select the object, in this example Hard disk 1, and then click the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Physical Disk Placement&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; tab in the bottom panel.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;From here, you can see that the VMDK object has a RAID-1 layout with a single mirror and no additional striping per policy. The two components that make up the RAID-1 mirror are placed on two different ESXi hosts, namely sa-esxi-02 and sb-esxi-02. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The quorum-maintenance "witness" is placed on ESXi host sb-esxi-01. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Note that vSAN will never let components, mirrors, and witness, share the same host for availability purposes. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This panel also displays which specific disks are in use for these data objects and witnesses. You can see where the data actually resides and how vSAN has distributed objects to ensure that you can tolerate the loss of any given host in the vSAN cluster and still maintain access to the object.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6Ahdfb1s79Y.6AqRVy3L9v2" slidebank="false" type="slide" noteswf="story_content/notes/Note6Ahdfb1s79Y.6AqRVy3L9v2.swf" pathlib="Lib" pathindex="23">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN makes object placement decisions to meet the number of failures to tolerate, failure tolerance method, and stripe width requirements defined in the storage policy. In this demo, you will learn how to examine VM storage policy settings and physical placement of objects and components using vSphere Web Client.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Log in to vSphere Web Client as an administrator or a user permitted to view VM configuration details. In the Hosts and Clusters view, select the VM that you want to examine. In this demo, let’s take a look at SA-Payload-01.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;On the VM's Summary page, you will see the policy that is applied and its compliance status. In this example, the policy applied is the default storage policy of vSAN datastore. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;All VMs deployed on the vSAN datastore must use a storage policy. If you don’t explicitly pick the policy for a VM, vSAN will automatically assign the default policy to the VM.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let's take a look at the default storage policy settings under the Manage tab. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This page shows the policy’s name and description. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;rule-set1&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The rules in a ruleset are based on specific capabilities exposed by vSAN. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The first one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of failures to tolerate&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The default value specifies that vSAN can tolerate one host failure meaning that the virtual machine data must be stored on at least two hosts.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The second one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of disk drives per object&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. For all-flash vSAN architecture, increasing this number may improve read performance for read-intensive workloads as all reads come directly from the flash devices in the capacity tier. However, for hybrid vSAN architecture, increasing stripe width provides minimal performance benefit as all the reads come from flash devices in the caching tier. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The remaining rules are for other vSAN capabilities that are out of the scope of this course. You can locate the information about these rules in the official vSAN documentation.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let us close this window, and go back to the VM’s Summary page. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This view displays the policy applied and VM compliance status. However, you cannot determine the object layout according to the storage policy. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To view this information, go to &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; &amp;gt; &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Policies&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Once on the VM’s Storage Policies page, you will be presented with a summary of the objects associated with the VM. These will include, in most cases, a VM home object and one or more VM disks. It will reflect which policy is applied to each object and whether the object is compliant. What you see here should match the information on the Summary page.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To see where each component that makes up a storage object resides, select the object, in this example Hard disk 1, and then click the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Physical Disk Placement&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; tab in the bottom panel.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;From here, you can see that the VMDK object has a RAID-1 layout with a single mirror and no additional striping per policy. The two components that make up the RAID-1 mirror are placed on two different ESXi hosts, namely sa-esxi-02 and sb-esxi-02. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The quorum-maintenance "witness" is placed on ESXi host sb-esxi-01. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Note that vSAN will never let components, mirrors, and witness, share the same host for availability purposes. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This panel also displays which specific disks are in use for these data objects and witnesses. You can see where the data actually resides and how vSAN has distributed objects to ensure that you can tolerate the loss of any given host in the vSAN cluster and still maintain access to the object.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6Ahdfb1s79Y.5cVVqgd9gmq" slidebank="false" type="slide" noteswf="story_content/notes/Note6Ahdfb1s79Y.5cVVqgd9gmq.swf" pathlib="Lib" pathindex="23">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN makes object placement decisions to meet the number of failures to tolerate, failure tolerance method, and stripe width requirements defined in the storage policy. In this demo, you will learn how to examine VM storage policy settings and physical placement of objects and components using vSphere Web Client.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Log in to vSphere Web Client as an administrator or a user permitted to view VM configuration details. In the Hosts and Clusters view, select the VM that you want to examine. In this demo, let’s take a look at SA-Payload-01.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;On the VM's Summary page, you will see the policy that is applied and its compliance status. In this example, the policy applied is the default storage policy of vSAN datastore. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;All VMs deployed on the vSAN datastore must use a storage policy. If you don’t explicitly pick the policy for a VM, vSAN will automatically assign the default policy to the VM.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let's take a look at the default storage policy settings under the Manage tab. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This page shows the policy’s name and description. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;rule-set1&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The rules in a ruleset are based on specific capabilities exposed by vSAN. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The first one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of failures to tolerate&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The default value specifies that vSAN can tolerate one host failure meaning that the virtual machine data must be stored on at least two hosts.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The second one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of disk drives per object&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. For all-flash vSAN architecture, increasing this number may improve read performance for read-intensive workloads as all reads come directly from the flash devices in the capacity tier. However, for hybrid vSAN architecture, increasing stripe width provides minimal performance benefit as all the reads come from flash devices in the caching tier. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The remaining rules are for other vSAN capabilities that are out of the scope of this course. You can locate the information about these rules in the official vSAN documentation.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let us close this window, and go back to the VM’s Summary page. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This view displays the policy applied and VM compliance status. However, you cannot determine the object layout according to the storage policy. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To view this information, go to &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; &amp;gt; &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Policies&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Once on the VM’s Storage Policies page, you will be presented with a summary of the objects associated with the VM. These will include, in most cases, a VM home object and one or more VM disks. It will reflect which policy is applied to each object and whether the object is compliant. What you see here should match the information on the Summary page.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To see where each component that makes up a storage object resides, select the object, in this example Hard disk 1, and then click the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Physical Disk Placement&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; tab in the bottom panel.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;From here, you can see that the VMDK object has a RAID-1 layout with a single mirror and no additional striping per policy. The two components that make up the RAID-1 mirror are placed on two different ESXi hosts, namely sa-esxi-02 and sb-esxi-02. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The quorum-maintenance "witness" is placed on ESXi host sb-esxi-01. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Note that vSAN will never let components, mirrors, and witness, share the same host for availability purposes. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This panel also displays which specific disks are in use for these data objects and witnesses. You can see where the data actually resides and how vSAN has distributed objects to ensure that you can tolerate the loss of any given host in the vSAN cluster and still maintain access to the object.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6Ahdfb1s79Y.5sPONcrIUSi" slidebank="false" type="slide" noteswf="story_content/notes/Note6Ahdfb1s79Y.5sPONcrIUSi.swf" pathlib="Lib" pathindex="23">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN makes object placement decisions to meet the number of failures to tolerate, failure tolerance method, and stripe width requirements defined in the storage policy. In this demo, you will learn how to examine VM storage policy settings and physical placement of objects and components using vSphere Web Client.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Log in to vSphere Web Client as an administrator or a user permitted to view VM configuration details. In the Hosts and Clusters view, select the VM that you want to examine. In this demo, let’s take a look at SA-Payload-01.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;On the VM's Summary page, you will see the policy that is applied and its compliance status. In this example, the policy applied is the default storage policy of vSAN datastore. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;All VMs deployed on the vSAN datastore must use a storage policy. If you don’t explicitly pick the policy for a VM, vSAN will automatically assign the default policy to the VM.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let's take a look at the default storage policy settings under the Manage tab. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This page shows the policy’s name and description. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;rule-set1&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The rules in a ruleset are based on specific capabilities exposed by vSAN. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The first one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of failures to tolerate&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The default value specifies that vSAN can tolerate one host failure meaning that the virtual machine data must be stored on at least two hosts.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The second one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of disk drives per object&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. For all-flash vSAN architecture, increasing this number may improve read performance for read-intensive workloads as all reads come directly from the flash devices in the capacity tier. However, for hybrid vSAN architecture, increasing stripe width provides minimal performance benefit as all the reads come from flash devices in the caching tier. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The remaining rules are for other vSAN capabilities that are out of the scope of this course. You can locate the information about these rules in the official vSAN documentation.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let us close this window, and go back to the VM’s Summary page. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This view displays the policy applied and VM compliance status. However, you cannot determine the object layout according to the storage policy. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To view this information, go to &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; &amp;gt; &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Policies&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Once on the VM’s Storage Policies page, you will be presented with a summary of the objects associated with the VM. These will include, in most cases, a VM home object and one or more VM disks. It will reflect which policy is applied to each object and whether the object is compliant. What you see here should match the information on the Summary page.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To see where each component that makes up a storage object resides, select the object, in this example Hard disk 1, and then click the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Physical Disk Placement&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; tab in the bottom panel.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;From here, you can see that the VMDK object has a RAID-1 layout with a single mirror and no additional striping per policy. The two components that make up the RAID-1 mirror are placed on two different ESXi hosts, namely sa-esxi-02 and sb-esxi-02. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The quorum-maintenance "witness" is placed on ESXi host sb-esxi-01. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Note that vSAN will never let components, mirrors, and witness, share the same host for availability purposes. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This panel also displays which specific disks are in use for these data objects and witnesses. You can see where the data actually resides and how vSAN has distributed objects to ensure that you can tolerate the loss of any given host in the vSAN cluster and still maintain access to the object.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6Ahdfb1s79Y.6b1ygr6XT8j" slidebank="false" type="slide" noteswf="story_content/notes/Note6Ahdfb1s79Y.6b1ygr6XT8j.swf" pathlib="Lib" pathindex="23">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN makes object placement decisions to meet the number of failures to tolerate, failure tolerance method, and stripe width requirements defined in the storage policy. In this demo, you will learn how to examine VM storage policy settings and physical placement of objects and components using vSphere Web Client.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Log in to vSphere Web Client as an administrator or a user permitted to view VM configuration details. In the Hosts and Clusters view, select the VM that you want to examine. In this demo, let’s take a look at SA-Payload-01.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;On the VM's Summary page, you will see the policy that is applied and its compliance status. In this example, the policy applied is the default storage policy of vSAN datastore. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;All VMs deployed on the vSAN datastore must use a storage policy. If you don’t explicitly pick the policy for a VM, vSAN will automatically assign the default policy to the VM.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let's take a look at the default storage policy settings under the Manage tab. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This page shows the policy’s name and description. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;rule-set1&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The rules in a ruleset are based on specific capabilities exposed by vSAN. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The first one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of failures to tolerate&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The default value specifies that vSAN can tolerate one host failure meaning that the virtual machine data must be stored on at least two hosts.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The second one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of disk drives per object&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. For all-flash vSAN architecture, increasing this number may improve read performance for read-intensive workloads as all reads come directly from the flash devices in the capacity tier. However, for hybrid vSAN architecture, increasing stripe width provides minimal performance benefit as all the reads come from flash devices in the caching tier. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The remaining rules are for other vSAN capabilities that are out of the scope of this course. You can locate the information about these rules in the official vSAN documentation.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let us close this window, and go back to the VM’s Summary page. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This view displays the policy applied and VM compliance status. However, you cannot determine the object layout according to the storage policy. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To view this information, go to &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; &amp;gt; &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Policies&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Once on the VM’s Storage Policies page, you will be presented with a summary of the objects associated with the VM. These will include, in most cases, a VM home object and one or more VM disks. It will reflect which policy is applied to each object and whether the object is compliant. What you see here should match the information on the Summary page.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To see where each component that makes up a storage object resides, select the object, in this example Hard disk 1, and then click the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Physical Disk Placement&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; tab in the bottom panel.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;From here, you can see that the VMDK object has a RAID-1 layout with a single mirror and no additional striping per policy. The two components that make up the RAID-1 mirror are placed on two different ESXi hosts, namely sa-esxi-02 and sb-esxi-02. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The quorum-maintenance "witness" is placed on ESXi host sb-esxi-01. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Note that vSAN will never let components, mirrors, and witness, share the same host for availability purposes. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This panel also displays which specific disks are in use for these data objects and witnesses. You can see where the data actually resides and how vSAN has distributed objects to ensure that you can tolerate the loss of any given host in the vSAN cluster and still maintain access to the object.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="6Ahdfb1s79Y.6MAxJrMJS7A" slidebank="false" type="slide" noteswf="story_content/notes/Note6Ahdfb1s79Y.6MAxJrMJS7A.swf" pathlib="Lib" pathindex="23">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN makes object placement decisions to meet the number of failures to tolerate, failure tolerance method, and stripe width requirements defined in the storage policy. In this demo, you will learn how to examine VM storage policy settings and physical placement of objects and components using vSphere Web Client.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Log in to vSphere Web Client as an administrator or a user permitted to view VM configuration details. In the Hosts and Clusters view, select the VM that you want to examine. In this demo, let’s take a look at SA-Payload-01.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;On the VM's Summary page, you will see the policy that is applied and its compliance status. In this example, the policy applied is the default storage policy of vSAN datastore. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;All VMs deployed on the vSAN datastore must use a storage policy. If you don’t explicitly pick the policy for a VM, vSAN will automatically assign the default policy to the VM.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let's take a look at the default storage policy settings under the Manage tab. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This page shows the policy’s name and description. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;rule-set1&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The rules in a ruleset are based on specific capabilities exposed by vSAN. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The first one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of failures to tolerate&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. The default value specifies that vSAN can tolerate one host failure meaning that the virtual machine data must be stored on at least two hosts.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The second one is the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;number of disk drives per object&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. For all-flash vSAN architecture, increasing this number may improve read performance for read-intensive workloads as all reads come directly from the flash devices in the capacity tier. However, for hybrid vSAN architecture, increasing stripe width provides minimal performance benefit as all the reads come from flash devices in the caching tier. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The remaining rules are for other vSAN capabilities that are out of the scope of this course. You can locate the information about these rules in the official vSAN documentation.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Let us close this window, and go back to the VM’s Summary page. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This view displays the policy applied and VM compliance status. However, you cannot determine the object layout according to the storage policy. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To view this information, go to &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; &amp;gt; &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Policies&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Once on the VM’s Storage Policies page, you will be presented with a summary of the objects associated with the VM. These will include, in most cases, a VM home object and one or more VM disks. It will reflect which policy is applied to each object and whether the object is compliant. What you see here should match the information on the Summary page.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;To see where each component that makes up a storage object resides, select the object, in this example Hard disk 1, and then click the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Physical Disk Placement&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; tab in the bottom panel.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;From here, you can see that the VMDK object has a RAID-1 layout with a single mirror and no additional striping per policy. The two components that make up the RAID-1 mirror are placed on two different ESXi hosts, namely sa-esxi-02 and sb-esxi-02. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;The quorum-maintenance "witness" is placed on ESXi host sb-esxi-01. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Note that vSAN will never let components, mirrors, and witness, share the same host for availability purposes. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;This panel also displays which specific disks are in use for these data objects and witnesses. You can see where the data actually resides and how vSAN has distributed objects to ensure that you can tolerate the loss of any given host in the vSAN cluster and still maintain access to the object.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="67gNhg3Hh6z.6jUeW0Qe1GG" slidebank="false" type="slide" noteswf="story_content/notes/Note67gNhg3Hh6z.6jUeW0Qe1GG.swf" pathlib="Lib" pathindex="16">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;With vSAN, you can check the compliance status of any VM or VMDK in vSphere Web Client. This demo will show you how to view a VM object compliance status.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN regularly monitors all objects for compliance with storage policies applied to them. If any of the components are absent or degraded for any reason, the object is placed in the Noncompliant state.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Now let's take a look at the component states inside the web client. After logging in to vSphere Web Client, in the Hosts and Clusters view, select the VM that you want to examine. For this example, select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;SA-Payload-01&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Go to &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; &amp;gt; &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Policies&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Once on the VM Storage Policies tab, you will see a summary of the objects associated with the VM and their compliance statuses. Any noncompliant objects will be marked.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;In this example, both VM home and VMDK objects are not compliant. On the Compliance Failures tab, you can see the requirements from the VM storage policy that the object cannot satisfy, which is the availability level in this case.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Here you can see one component and the witness are in an Active state, which means their operations are normal. Another component is in an Absent state, which means this component is not available. This could be caused by the host rebooting, the disk unexpectedly pulled from the host, or network disconnection.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Because we have two of the three components active, the VM home object is still accessible but noncompliant due to the missing mirror.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Losing access to a component typically reduces the availability level of an object, and this is reflected in the vSAN health check report. Let’s navigate to the vSAN cluster. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Click the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; tab.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Click &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;vSAN&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; and select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Virtual Objects&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;You can see that the SA-Payload-01 VM’s object health state is Reduced availability. This means the object is accessible, but has suffered a failure. vSAN is actively working on re-protecting the object by building the new component to bring the object back to compliance. Expand the virtual machine folder.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;A summary of the objects that make up the VM is displayed.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;It’s similar to what you saw previously on the VM’s Monitor &amp;gt; Policies tab.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="67gNhg3Hh6z.62V5Y7mWUQ7" slidebank="false" type="slide" noteswf="story_content/notes/Note67gNhg3Hh6z.62V5Y7mWUQ7.swf" pathlib="Lib" pathindex="16">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;With vSAN, you can check the compliance status of any VM or VMDK in vSphere Web Client. This demo will show you how to view a VM object compliance status.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN regularly monitors all objects for compliance with storage policies applied to them. If any of the components are absent or degraded for any reason, the object is placed in the Noncompliant state.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Now let's take a look at the component states inside the web client. After logging in to vSphere Web Client, in the Hosts and Clusters view, select the VM that you want to examine. For this example, select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;SA-Payload-01&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Go to &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; &amp;gt; &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Policies&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Once on the VM Storage Policies tab, you will see a summary of the objects associated with the VM and their compliance statuses. Any noncompliant objects will be marked.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;In this example, both VM home and VMDK objects are not compliant. On the Compliance Failures tab, you can see the requirements from the VM storage policy that the object cannot satisfy, which is the availability level in this case.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Here you can see one component and the witness are in an Active state, which means their operations are normal. Another component is in an Absent state, which means this component is not available. This could be caused by the host rebooting, the disk unexpectedly pulled from the host, or network disconnection.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Because we have two of the three components active, the VM home object is still accessible but noncompliant due to the missing mirror.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Losing access to a component typically reduces the availability level of an object, and this is reflected in the vSAN health check report. Let’s navigate to the vSAN cluster. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Click the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; tab.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Click &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;vSAN&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; and select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Virtual Objects&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;You can see that the SA-Payload-01 VM’s object health state is Reduced availability. This means the object is accessible, but has suffered a failure. vSAN is actively working on re-protecting the object by building the new component to bring the object back to compliance. Expand the virtual machine folder.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;A summary of the objects that make up the VM is displayed.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;It’s similar to what you saw previously on the VM’s Monitor &amp;gt; Policies tab.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="67gNhg3Hh6z.6Qwak1Ffw6K" slidebank="false" type="slide" noteswf="story_content/notes/Note67gNhg3Hh6z.6Qwak1Ffw6K.swf" pathlib="Lib" pathindex="16">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;With vSAN, you can check the compliance status of any VM or VMDK in vSphere Web Client. This demo will show you how to view a VM object compliance status.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN regularly monitors all objects for compliance with storage policies applied to them. If any of the components are absent or degraded for any reason, the object is placed in the Noncompliant state.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Now let's take a look at the component states inside the web client. After logging in to vSphere Web Client, in the Hosts and Clusters view, select the VM that you want to examine. For this example, select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;SA-Payload-01&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Go to &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; &amp;gt; &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Policies&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Once on the VM Storage Policies tab, you will see a summary of the objects associated with the VM and their compliance statuses. Any noncompliant objects will be marked.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;In this example, both VM home and VMDK objects are not compliant. On the Compliance Failures tab, you can see the requirements from the VM storage policy that the object cannot satisfy, which is the availability level in this case.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Here you can see one component and the witness are in an Active state, which means their operations are normal. Another component is in an Absent state, which means this component is not available. This could be caused by the host rebooting, the disk unexpectedly pulled from the host, or network disconnection.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Because we have two of the three components active, the VM home object is still accessible but noncompliant due to the missing mirror.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Losing access to a component typically reduces the availability level of an object, and this is reflected in the vSAN health check report. Let’s navigate to the vSAN cluster. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Click the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; tab.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Click &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;vSAN&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; and select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Virtual Objects&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;You can see that the SA-Payload-01 VM’s object health state is Reduced availability. This means the object is accessible, but has suffered a failure. vSAN is actively working on re-protecting the object by building the new component to bring the object back to compliance. Expand the virtual machine folder.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;A summary of the objects that make up the VM is displayed.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;It’s similar to what you saw previously on the VM’s Monitor &amp;gt; Policies tab.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="67gNhg3Hh6z.6b0kDWmia2X" slidebank="false" type="slide" noteswf="story_content/notes/Note67gNhg3Hh6z.6b0kDWmia2X.swf" pathlib="Lib" pathindex="16">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;With vSAN, you can check the compliance status of any VM or VMDK in vSphere Web Client. This demo will show you how to view a VM object compliance status.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN regularly monitors all objects for compliance with storage policies applied to them. If any of the components are absent or degraded for any reason, the object is placed in the Noncompliant state.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Now let's take a look at the component states inside the web client. After logging in to vSphere Web Client, in the Hosts and Clusters view, select the VM that you want to examine. For this example, select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;SA-Payload-01&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Go to &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; &amp;gt; &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Policies&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Once on the VM Storage Policies tab, you will see a summary of the objects associated with the VM and their compliance statuses. Any noncompliant objects will be marked.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;In this example, both VM home and VMDK objects are not compliant. On the Compliance Failures tab, you can see the requirements from the VM storage policy that the object cannot satisfy, which is the availability level in this case.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Here you can see one component and the witness are in an Active state, which means their operations are normal. Another component is in an Absent state, which means this component is not available. This could be caused by the host rebooting, the disk unexpectedly pulled from the host, or network disconnection.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Because we have two of the three components active, the VM home object is still accessible but noncompliant due to the missing mirror.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Losing access to a component typically reduces the availability level of an object, and this is reflected in the vSAN health check report. Let’s navigate to the vSAN cluster. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Click the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; tab.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Click &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;vSAN&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; and select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Virtual Objects&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;You can see that the SA-Payload-01 VM’s object health state is Reduced availability. This means the object is accessible, but has suffered a failure. vSAN is actively working on re-protecting the object by building the new component to bring the object back to compliance. Expand the virtual machine folder.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;A summary of the objects that make up the VM is displayed.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;It’s similar to what you saw previously on the VM’s Monitor &amp;gt; Policies tab.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="67gNhg3Hh6z.5Y3zP89bfK7" slidebank="false" type="slide" noteswf="story_content/notes/Note67gNhg3Hh6z.5Y3zP89bfK7.swf" pathlib="Lib" pathindex="16">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;With vSAN, you can check the compliance status of any VM or VMDK in vSphere Web Client. This demo will show you how to view a VM object compliance status.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN regularly monitors all objects for compliance with storage policies applied to them. If any of the components are absent or degraded for any reason, the object is placed in the Noncompliant state.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Now let's take a look at the component states inside the web client. After logging in to vSphere Web Client, in the Hosts and Clusters view, select the VM that you want to examine. For this example, select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;SA-Payload-01&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Go to &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; &amp;gt; &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Policies&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Once on the VM Storage Policies tab, you will see a summary of the objects associated with the VM and their compliance statuses. Any noncompliant objects will be marked.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;In this example, both VM home and VMDK objects are not compliant. On the Compliance Failures tab, you can see the requirements from the VM storage policy that the object cannot satisfy, which is the availability level in this case.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Here you can see one component and the witness are in an Active state, which means their operations are normal. Another component is in an Absent state, which means this component is not available. This could be caused by the host rebooting, the disk unexpectedly pulled from the host, or network disconnection.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Because we have two of the three components active, the VM home object is still accessible but noncompliant due to the missing mirror.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Losing access to a component typically reduces the availability level of an object, and this is reflected in the vSAN health check report. Let’s navigate to the vSAN cluster. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Click the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; tab.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Click &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;vSAN&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; and select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Virtual Objects&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;You can see that the SA-Payload-01 VM’s object health state is Reduced availability. This means the object is accessible, but has suffered a failure. vSAN is actively working on re-protecting the object by building the new component to bring the object back to compliance. Expand the virtual machine folder.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;A summary of the objects that make up the VM is displayed.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;It’s similar to what you saw previously on the VM’s Monitor &amp;gt; Policies tab.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="67gNhg3Hh6z.5yo5EaHgb48" slidebank="false" type="slide" noteswf="story_content/notes/Note67gNhg3Hh6z.5yo5EaHgb48.swf" pathlib="Lib" pathindex="16">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;With vSAN, you can check the compliance status of any VM or VMDK in vSphere Web Client. This demo will show you how to view a VM object compliance status.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN regularly monitors all objects for compliance with storage policies applied to them. If any of the components are absent or degraded for any reason, the object is placed in the Noncompliant state.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Now let's take a look at the component states inside the web client. After logging in to vSphere Web Client, in the Hosts and Clusters view, select the VM that you want to examine. For this example, select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;SA-Payload-01&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Go to &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; &amp;gt; &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Policies&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Once on the VM Storage Policies tab, you will see a summary of the objects associated with the VM and their compliance statuses. Any noncompliant objects will be marked.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;In this example, both VM home and VMDK objects are not compliant. On the Compliance Failures tab, you can see the requirements from the VM storage policy that the object cannot satisfy, which is the availability level in this case.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Here you can see one component and the witness are in an Active state, which means their operations are normal. Another component is in an Absent state, which means this component is not available. This could be caused by the host rebooting, the disk unexpectedly pulled from the host, or network disconnection.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Because we have two of the three components active, the VM home object is still accessible but noncompliant due to the missing mirror.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Losing access to a component typically reduces the availability level of an object, and this is reflected in the vSAN health check report. Let’s navigate to the vSAN cluster. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Click the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; tab.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Click &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;vSAN&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; and select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Virtual Objects&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;You can see that the SA-Payload-01 VM’s object health state is Reduced availability. This means the object is accessible, but has suffered a failure. vSAN is actively working on re-protecting the object by building the new component to bring the object back to compliance. Expand the virtual machine folder.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;A summary of the objects that make up the VM is displayed.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;It’s similar to what you saw previously on the VM’s Monitor &amp;gt; Policies tab.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="67gNhg3Hh6z.6Lirf7HbBJV" slidebank="false" type="slide" noteswf="story_content/notes/Note67gNhg3Hh6z.6Lirf7HbBJV.swf" pathlib="Lib" pathindex="16">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;With vSAN, you can check the compliance status of any VM or VMDK in vSphere Web Client. This demo will show you how to view a VM object compliance status.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN regularly monitors all objects for compliance with storage policies applied to them. If any of the components are absent or degraded for any reason, the object is placed in the Noncompliant state.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Now let's take a look at the component states inside the web client. After logging in to vSphere Web Client, in the Hosts and Clusters view, select the VM that you want to examine. For this example, select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;SA-Payload-01&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Go to &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; &amp;gt; &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Policies&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Once on the VM Storage Policies tab, you will see a summary of the objects associated with the VM and their compliance statuses. Any noncompliant objects will be marked.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;In this example, both VM home and VMDK objects are not compliant. On the Compliance Failures tab, you can see the requirements from the VM storage policy that the object cannot satisfy, which is the availability level in this case.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Here you can see one component and the witness are in an Active state, which means their operations are normal. Another component is in an Absent state, which means this component is not available. This could be caused by the host rebooting, the disk unexpectedly pulled from the host, or network disconnection.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Because we have two of the three components active, the VM home object is still accessible but noncompliant due to the missing mirror.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Losing access to a component typically reduces the availability level of an object, and this is reflected in the vSAN health check report. Let’s navigate to the vSAN cluster. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Click the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; tab.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Click &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;vSAN&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; and select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Virtual Objects&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;You can see that the SA-Payload-01 VM’s object health state is Reduced availability. This means the object is accessible, but has suffered a failure. vSAN is actively working on re-protecting the object by building the new component to bring the object back to compliance. Expand the virtual machine folder.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;A summary of the objects that make up the VM is displayed.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;It’s similar to what you saw previously on the VM’s Monitor &amp;gt; Policies tab.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="67gNhg3Hh6z.5gQgDYjmMsS" slidebank="false" type="slide" noteswf="story_content/notes/Note67gNhg3Hh6z.5gQgDYjmMsS.swf" pathlib="Lib" pathindex="16">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;With vSAN, you can check the compliance status of any VM or VMDK in vSphere Web Client. This demo will show you how to view a VM object compliance status.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN regularly monitors all objects for compliance with storage policies applied to them. If any of the components are absent or degraded for any reason, the object is placed in the Noncompliant state.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Now let's take a look at the component states inside the web client. After logging in to vSphere Web Client, in the Hosts and Clusters view, select the VM that you want to examine. For this example, select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;SA-Payload-01&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Go to &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; &amp;gt; &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Policies&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Once on the VM Storage Policies tab, you will see a summary of the objects associated with the VM and their compliance statuses. Any noncompliant objects will be marked.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;In this example, both VM home and VMDK objects are not compliant. On the Compliance Failures tab, you can see the requirements from the VM storage policy that the object cannot satisfy, which is the availability level in this case.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Here you can see one component and the witness are in an Active state, which means their operations are normal. Another component is in an Absent state, which means this component is not available. This could be caused by the host rebooting, the disk unexpectedly pulled from the host, or network disconnection.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Because we have two of the three components active, the VM home object is still accessible but noncompliant due to the missing mirror.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Losing access to a component typically reduces the availability level of an object, and this is reflected in the vSAN health check report. Let’s navigate to the vSAN cluster. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Click the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; tab.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Click &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;vSAN&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; and select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Virtual Objects&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;You can see that the SA-Payload-01 VM’s object health state is Reduced availability. This means the object is accessible, but has suffered a failure. vSAN is actively working on re-protecting the object by building the new component to bring the object back to compliance. Expand the virtual machine folder.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;A summary of the objects that make up the VM is displayed.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;It’s similar to what you saw previously on the VM’s Monitor &amp;gt; Policies tab.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="67gNhg3Hh6z.6Vt6gyxvxsk" slidebank="false" type="slide" noteswf="story_content/notes/Note67gNhg3Hh6z.6Vt6gyxvxsk.swf" pathlib="Lib" pathindex="16">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;With vSAN, you can check the compliance status of any VM or VMDK in vSphere Web Client. This demo will show you how to view a VM object compliance status.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN regularly monitors all objects for compliance with storage policies applied to them. If any of the components are absent or degraded for any reason, the object is placed in the Noncompliant state.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Now let's take a look at the component states inside the web client. After logging in to vSphere Web Client, in the Hosts and Clusters view, select the VM that you want to examine. For this example, select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;SA-Payload-01&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Go to &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; &amp;gt; &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Policies&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Once on the VM Storage Policies tab, you will see a summary of the objects associated with the VM and their compliance statuses. Any noncompliant objects will be marked.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;In this example, both VM home and VMDK objects are not compliant. On the Compliance Failures tab, you can see the requirements from the VM storage policy that the object cannot satisfy, which is the availability level in this case.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Here you can see one component and the witness are in an Active state, which means their operations are normal. Another component is in an Absent state, which means this component is not available. This could be caused by the host rebooting, the disk unexpectedly pulled from the host, or network disconnection.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Because we have two of the three components active, the VM home object is still accessible but noncompliant due to the missing mirror.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Losing access to a component typically reduces the availability level of an object, and this is reflected in the vSAN health check report. Let’s navigate to the vSAN cluster. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Click the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; tab.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Click &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;vSAN&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; and select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Virtual Objects&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;You can see that the SA-Payload-01 VM’s object health state is Reduced availability. This means the object is accessible, but has suffered a failure. vSAN is actively working on re-protecting the object by building the new component to bring the object back to compliance. Expand the virtual machine folder.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;A summary of the objects that make up the VM is displayed.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;It’s similar to what you saw previously on the VM’s Monitor &amp;gt; Policies tab.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="67gNhg3Hh6z.5rHorcZaQET" slidebank="false" type="slide" noteswf="story_content/notes/Note67gNhg3Hh6z.5rHorcZaQET.swf" pathlib="Lib" pathindex="16">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;With vSAN, you can check the compliance status of any VM or VMDK in vSphere Web Client. This demo will show you how to view a VM object compliance status.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN regularly monitors all objects for compliance with storage policies applied to them. If any of the components are absent or degraded for any reason, the object is placed in the Noncompliant state.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Now let's take a look at the component states inside the web client. After logging in to vSphere Web Client, in the Hosts and Clusters view, select the VM that you want to examine. For this example, select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;SA-Payload-01&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Go to &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; &amp;gt; &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Policies&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Once on the VM Storage Policies tab, you will see a summary of the objects associated with the VM and their compliance statuses. Any noncompliant objects will be marked.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;In this example, both VM home and VMDK objects are not compliant. On the Compliance Failures tab, you can see the requirements from the VM storage policy that the object cannot satisfy, which is the availability level in this case.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Here you can see one component and the witness are in an Active state, which means their operations are normal. Another component is in an Absent state, which means this component is not available. This could be caused by the host rebooting, the disk unexpectedly pulled from the host, or network disconnection.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Because we have two of the three components active, the VM home object is still accessible but noncompliant due to the missing mirror.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Losing access to a component typically reduces the availability level of an object, and this is reflected in the vSAN health check report. Let’s navigate to the vSAN cluster. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Click the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; tab.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Click &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;vSAN&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; and select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Virtual Objects&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;You can see that the SA-Payload-01 VM’s object health state is Reduced availability. This means the object is accessible, but has suffered a failure. vSAN is actively working on re-protecting the object by building the new component to bring the object back to compliance. Expand the virtual machine folder.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;A summary of the objects that make up the VM is displayed.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;It’s similar to what you saw previously on the VM’s Monitor &amp;gt; Policies tab.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="67gNhg3Hh6z.6cPdwxoYeLO" slidebank="false" type="slide" noteswf="story_content/notes/Note67gNhg3Hh6z.6cPdwxoYeLO.swf" pathlib="Lib" pathindex="16">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;With vSAN, you can check the compliance status of any VM or VMDK in vSphere Web Client. This demo will show you how to view a VM object compliance status.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN regularly monitors all objects for compliance with storage policies applied to them. If any of the components are absent or degraded for any reason, the object is placed in the Noncompliant state.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Now let's take a look at the component states inside the web client. After logging in to vSphere Web Client, in the Hosts and Clusters view, select the VM that you want to examine. For this example, select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;SA-Payload-01&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Go to &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; &amp;gt; &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Policies&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Once on the VM Storage Policies tab, you will see a summary of the objects associated with the VM and their compliance statuses. Any noncompliant objects will be marked.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;In this example, both VM home and VMDK objects are not compliant. On the Compliance Failures tab, you can see the requirements from the VM storage policy that the object cannot satisfy, which is the availability level in this case.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Here you can see one component and the witness are in an Active state, which means their operations are normal. Another component is in an Absent state, which means this component is not available. This could be caused by the host rebooting, the disk unexpectedly pulled from the host, or network disconnection.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Because we have two of the three components active, the VM home object is still accessible but noncompliant due to the missing mirror.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Losing access to a component typically reduces the availability level of an object, and this is reflected in the vSAN health check report. Let’s navigate to the vSAN cluster. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Click the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; tab.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Click &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;vSAN&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; and select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Virtual Objects&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;You can see that the SA-Payload-01 VM’s object health state is Reduced availability. This means the object is accessible, but has suffered a failure. vSAN is actively working on re-protecting the object by building the new component to bring the object back to compliance. Expand the virtual machine folder.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;A summary of the objects that make up the VM is displayed.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;It’s similar to what you saw previously on the VM’s Monitor &amp;gt; Policies tab.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript><slidetranscript slideid="67gNhg3Hh6z.6V0OcLDOwmF" slidebank="false" type="slide" noteswf="story_content/notes/Note67gNhg3Hh6z.6V0OcLDOwmF.swf" pathlib="Lib" pathindex="16">&lt;html&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;With vSAN, you can check the compliance status of any VM or VMDK in vSphere Web Client. This demo will show you how to view a VM object compliance status.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;vSAN regularly monitors all objects for compliance with storage policies applied to them. If any of the components are absent or degraded for any reason, the object is placed in the Noncompliant state.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Now let's take a look at the component states inside the web client. After logging in to vSphere Web Client, in the Hosts and Clusters view, select the VM that you want to examine. For this example, select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;SA-Payload-01&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Go to &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; &amp;gt; &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Policies&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Once on the VM Storage Policies tab, you will see a summary of the objects associated with the VM and their compliance statuses. Any noncompliant objects will be marked.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;In this example, both VM home and VMDK objects are not compliant. On the Compliance Failures tab, you can see the requirements from the VM storage policy that the object cannot satisfy, which is the availability level in this case.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Here you can see one component and the witness are in an Active state, which means their operations are normal. Another component is in an Absent state, which means this component is not available. This could be caused by the host rebooting, the disk unexpectedly pulled from the host, or network disconnection.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Because we have two of the three components active, the VM home object is still accessible but noncompliant due to the missing mirror.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Losing access to a component typically reduces the availability level of an object, and this is reflected in the vSAN health check report. Let’s navigate to the vSAN cluster. &lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Click the &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Monitor&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; tab.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;Click &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;vSAN&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt; and select &lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;&lt;b&gt;Virtual Objects&lt;/b&gt;&lt;/font&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;You can see that the SA-Payload-01 VM’s object health state is Reduced availability. This means the object is accessible, but has suffered a failure. vSAN is actively working on re-protecting the object by building the new component to bring the object back to compliance. Expand the virtual machine folder.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;A summary of the objects that make up the VM is displayed.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;p align='left'&gt;&lt;textformat leading='0' tabstops='[0, 48, 96, 144]' blockindent='0' indent='0'&gt;&lt;font face='Calibri' size='16.5pt' color='#000000'&gt;It’s similar to what you saw previously on the VM’s Monitor &amp;gt; Policies tab.&lt;/font&gt;&lt;/textformat&gt;&lt;/p&gt;&lt;/html&gt;</slidetranscript></slidetranscripts></transcript_data><glossary_data /></bwFrame>